/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.vdocField;
import vn.gov.hoabinh.model.vdocFieldModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the vdocField service. Represents a row in the &quot;vdocField&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vdocFieldModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vdocFieldImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see vdocFieldImpl
 * @see vdocField
 * @see vdocFieldModel
 * @generated
 */
@ProviderType
public class vdocFieldModelImpl extends BaseModelImpl<vdocField>
	implements vdocFieldModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vdoc field model instance should use the {@link vdocField} interface instead.
	 */
	public static final String TABLE_NAME = "vdocField";
	public static final Object[][] TABLE_COLUMNS = {
			{ "fieldId", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "createdByUser", Types.BIGINT },
			{ "modifiedByUser", Types.BIGINT },
			{ "parentId", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "language", Types.VARCHAR },
			{ "statusField", Types.BOOLEAN },
			{ "position", Types.INTEGER },
			{ "listparent", Types.VARCHAR },
			{ "levels", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("fieldId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("parentId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusField", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("position", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("listparent", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("levels", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table vdocField (fieldId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,userId LONG,createdDate DATE null,modifiedDate DATE null,createdByUser LONG,modifiedByUser LONG,parentId VARCHAR(75) null,name VARCHAR(75) null,description VARCHAR(75) null,language VARCHAR(75) null,statusField BOOLEAN,position INTEGER,listparent VARCHAR(75) null,levels VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table vdocField";
	public static final String ORDER_BY_JPQL = " ORDER BY vdocField.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vdocField.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.vdocField"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.vdocField"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.vdocField"),
			true);
	public static final long GROUPID_COLUMN_BITMASK = 1L;
	public static final long LANGUAGE_COLUMN_BITMASK = 2L;
	public static final long PARENTID_COLUMN_BITMASK = 4L;
	public static final long NAME_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.vdocField"));

	public vdocFieldModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _fieldId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setFieldId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _fieldId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return vdocField.class;
	}

	@Override
	public String getModelClassName() {
		return vdocField.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("fieldId", getFieldId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createdByUser", getCreatedByUser());
		attributes.put("modifiedByUser", getModifiedByUser());
		attributes.put("parentId", getParentId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("language", getLanguage());
		attributes.put("statusField", getStatusField());
		attributes.put("position", getPosition());
		attributes.put("listparent", getListparent());
		attributes.put("levels", getLevels());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String fieldId = (String)attributes.get("fieldId");

		if (fieldId != null) {
			setFieldId(fieldId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long createdByUser = (Long)attributes.get("createdByUser");

		if (createdByUser != null) {
			setCreatedByUser(createdByUser);
		}

		Long modifiedByUser = (Long)attributes.get("modifiedByUser");

		if (modifiedByUser != null) {
			setModifiedByUser(modifiedByUser);
		}

		String parentId = (String)attributes.get("parentId");

		if (parentId != null) {
			setParentId(parentId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String language = (String)attributes.get("language");

		if (language != null) {
			setLanguage(language);
		}

		Boolean statusField = (Boolean)attributes.get("statusField");

		if (statusField != null) {
			setStatusField(statusField);
		}

		Integer position = (Integer)attributes.get("position");

		if (position != null) {
			setPosition(position);
		}

		String listparent = (String)attributes.get("listparent");

		if (listparent != null) {
			setListparent(listparent);
		}

		String levels = (String)attributes.get("levels");

		if (levels != null) {
			setLevels(levels);
		}
	}

	@Override
	public String getFieldId() {
		if (_fieldId == null) {
			return StringPool.BLANK;
		}
		else {
			return _fieldId;
		}
	}

	@Override
	public void setFieldId(String fieldId) {
		_fieldId = fieldId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCreatedByUser() {
		return _createdByUser;
	}

	@Override
	public void setCreatedByUser(long createdByUser) {
		_createdByUser = createdByUser;
	}

	@Override
	public long getModifiedByUser() {
		return _modifiedByUser;
	}

	@Override
	public void setModifiedByUser(long modifiedByUser) {
		_modifiedByUser = modifiedByUser;
	}

	@Override
	public String getParentId() {
		if (_parentId == null) {
			return StringPool.BLANK;
		}
		else {
			return _parentId;
		}
	}

	@Override
	public void setParentId(String parentId) {
		_columnBitmask |= PARENTID_COLUMN_BITMASK;

		if (_originalParentId == null) {
			_originalParentId = _parentId;
		}

		_parentId = parentId;
	}

	public String getOriginalParentId() {
		return GetterUtil.getString(_originalParentId);
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		_name = name;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		_columnBitmask |= LANGUAGE_COLUMN_BITMASK;

		if (_originalLanguage == null) {
			_originalLanguage = _language;
		}

		_language = language;
	}

	public String getOriginalLanguage() {
		return GetterUtil.getString(_originalLanguage);
	}

	@Override
	public boolean getStatusField() {
		return _statusField;
	}

	@Override
	public boolean isStatusField() {
		return _statusField;
	}

	@Override
	public void setStatusField(boolean statusField) {
		_statusField = statusField;
	}

	@Override
	public int getPosition() {
		return _position;
	}

	@Override
	public void setPosition(int position) {
		_position = position;
	}

	@Override
	public String getListparent() {
		if (_listparent == null) {
			return StringPool.BLANK;
		}
		else {
			return _listparent;
		}
	}

	@Override
	public void setListparent(String listparent) {
		_listparent = listparent;
	}

	@Override
	public String getLevels() {
		if (_levels == null) {
			return StringPool.BLANK;
		}
		else {
			return _levels;
		}
	}

	@Override
	public void setLevels(String levels) {
		_levels = levels;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public vdocField toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (vdocField)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		vdocFieldImpl vdocFieldImpl = new vdocFieldImpl();

		vdocFieldImpl.setFieldId(getFieldId());
		vdocFieldImpl.setGroupId(getGroupId());
		vdocFieldImpl.setCompanyId(getCompanyId());
		vdocFieldImpl.setUserId(getUserId());
		vdocFieldImpl.setCreatedDate(getCreatedDate());
		vdocFieldImpl.setModifiedDate(getModifiedDate());
		vdocFieldImpl.setCreatedByUser(getCreatedByUser());
		vdocFieldImpl.setModifiedByUser(getModifiedByUser());
		vdocFieldImpl.setParentId(getParentId());
		vdocFieldImpl.setName(getName());
		vdocFieldImpl.setDescription(getDescription());
		vdocFieldImpl.setLanguage(getLanguage());
		vdocFieldImpl.setStatusField(getStatusField());
		vdocFieldImpl.setPosition(getPosition());
		vdocFieldImpl.setListparent(getListparent());
		vdocFieldImpl.setLevels(getLevels());

		vdocFieldImpl.resetOriginalValues();

		return vdocFieldImpl;
	}

	@Override
	public int compareTo(vdocField vdocField) {
		int value = 0;

		value = getName().compareTo(vdocField.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof vdocField)) {
			return false;
		}

		vdocField vdocField = (vdocField)obj;

		String primaryKey = vdocField.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		vdocFieldModelImpl vdocFieldModelImpl = this;

		vdocFieldModelImpl._originalGroupId = vdocFieldModelImpl._groupId;

		vdocFieldModelImpl._setOriginalGroupId = false;

		vdocFieldModelImpl._originalParentId = vdocFieldModelImpl._parentId;

		vdocFieldModelImpl._originalLanguage = vdocFieldModelImpl._language;

		vdocFieldModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<vdocField> toCacheModel() {
		vdocFieldCacheModel vdocFieldCacheModel = new vdocFieldCacheModel();

		vdocFieldCacheModel.fieldId = getFieldId();

		String fieldId = vdocFieldCacheModel.fieldId;

		if ((fieldId != null) && (fieldId.length() == 0)) {
			vdocFieldCacheModel.fieldId = null;
		}

		vdocFieldCacheModel.groupId = getGroupId();

		vdocFieldCacheModel.companyId = getCompanyId();

		vdocFieldCacheModel.userId = getUserId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			vdocFieldCacheModel.createdDate = createdDate.getTime();
		}
		else {
			vdocFieldCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vdocFieldCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vdocFieldCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vdocFieldCacheModel.createdByUser = getCreatedByUser();

		vdocFieldCacheModel.modifiedByUser = getModifiedByUser();

		vdocFieldCacheModel.parentId = getParentId();

		String parentId = vdocFieldCacheModel.parentId;

		if ((parentId != null) && (parentId.length() == 0)) {
			vdocFieldCacheModel.parentId = null;
		}

		vdocFieldCacheModel.name = getName();

		String name = vdocFieldCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			vdocFieldCacheModel.name = null;
		}

		vdocFieldCacheModel.description = getDescription();

		String description = vdocFieldCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			vdocFieldCacheModel.description = null;
		}

		vdocFieldCacheModel.language = getLanguage();

		String language = vdocFieldCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			vdocFieldCacheModel.language = null;
		}

		vdocFieldCacheModel.statusField = getStatusField();

		vdocFieldCacheModel.position = getPosition();

		vdocFieldCacheModel.listparent = getListparent();

		String listparent = vdocFieldCacheModel.listparent;

		if ((listparent != null) && (listparent.length() == 0)) {
			vdocFieldCacheModel.listparent = null;
		}

		vdocFieldCacheModel.levels = getLevels();

		String levels = vdocFieldCacheModel.levels;

		if ((levels != null) && (levels.length() == 0)) {
			vdocFieldCacheModel.levels = null;
		}

		return vdocFieldCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{fieldId=");
		sb.append(getFieldId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createdByUser=");
		sb.append(getCreatedByUser());
		sb.append(", modifiedByUser=");
		sb.append(getModifiedByUser());
		sb.append(", parentId=");
		sb.append(getParentId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", statusField=");
		sb.append(getStatusField());
		sb.append(", position=");
		sb.append(getPosition());
		sb.append(", listparent=");
		sb.append(getListparent());
		sb.append(", levels=");
		sb.append(getLevels());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.vdocField");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>fieldId</column-name><column-value><![CDATA[");
		sb.append(getFieldId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdByUser</column-name><column-value><![CDATA[");
		sb.append(getCreatedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedByUser</column-name><column-value><![CDATA[");
		sb.append(getModifiedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentId</column-name><column-value><![CDATA[");
		sb.append(getParentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusField</column-name><column-value><![CDATA[");
		sb.append(getStatusField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>position</column-name><column-value><![CDATA[");
		sb.append(getPosition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>listparent</column-name><column-value><![CDATA[");
		sb.append(getListparent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levels</column-name><column-value><![CDATA[");
		sb.append(getLevels());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = vdocField.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			vdocField.class
		};
	private String _fieldId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _createdByUser;
	private long _modifiedByUser;
	private String _parentId;
	private String _originalParentId;
	private String _name;
	private String _description;
	private String _language;
	private String _originalLanguage;
	private boolean _statusField;
	private int _position;
	private String _listparent;
	private String _levels;
	private long _columnBitmask;
	private vdocField _escapedModel;
}