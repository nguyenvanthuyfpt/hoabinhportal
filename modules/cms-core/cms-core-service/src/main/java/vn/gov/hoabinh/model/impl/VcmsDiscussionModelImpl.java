/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.VcmsDiscussion;
import vn.gov.hoabinh.model.VcmsDiscussionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VcmsDiscussion service. Represents a row in the &quot;VcmsDiscussion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VcmsDiscussionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VcmsDiscussionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VcmsDiscussionImpl
 * @see VcmsDiscussion
 * @see VcmsDiscussionModel
 * @generated
 */
@ProviderType
public class VcmsDiscussionModelImpl extends BaseModelImpl<VcmsDiscussion>
	implements VcmsDiscussionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vcms discussion model instance should use the {@link VcmsDiscussion} interface instead.
	 */
	public static final String TABLE_NAME = "VcmsDiscussion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "discussionId", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "visitorName", Types.VARCHAR },
			{ "visitorEmail", Types.VARCHAR },
			{ "visitorPhone", Types.VARCHAR },
			{ "postedDate", Types.TIMESTAMP },
			{ "approved", Types.BOOLEAN },
			{ "approvedByUser", Types.VARCHAR },
			{ "approvedDate", Types.TIMESTAMP },
			{ "articleId", Types.VARCHAR },
			{ "title", Types.VARCHAR },
			{ "content", Types.VARCHAR },
			{ "language", Types.VARCHAR },
			{ "hasAttachment", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("discussionId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("visitorName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("visitorEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("visitorPhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("postedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("approved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("approvedByUser", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("approvedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("articleId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hasAttachment", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table VcmsDiscussion (discussionId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,visitorName VARCHAR(75) null,visitorEmail VARCHAR(75) null,visitorPhone VARCHAR(75) null,postedDate DATE null,approved BOOLEAN,approvedByUser VARCHAR(75) null,approvedDate DATE null,articleId VARCHAR(75) null,title VARCHAR(75) null,content VARCHAR(75) null,language VARCHAR(75) null,hasAttachment BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table VcmsDiscussion";
	public static final String ORDER_BY_JPQL = " ORDER BY vcmsDiscussion.postedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VcmsDiscussion.postedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.VcmsDiscussion"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.VcmsDiscussion"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.VcmsDiscussion"),
			true);
	public static final long APPROVED_COLUMN_BITMASK = 1L;
	public static final long ARTICLEID_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long LANGUAGE_COLUMN_BITMASK = 8L;
	public static final long POSTEDDATE_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.VcmsDiscussion"));

	public VcmsDiscussionModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _discussionId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setDiscussionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _discussionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VcmsDiscussion.class;
	}

	@Override
	public String getModelClassName() {
		return VcmsDiscussion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("discussionId", getDiscussionId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("visitorName", getVisitorName());
		attributes.put("visitorEmail", getVisitorEmail());
		attributes.put("visitorPhone", getVisitorPhone());
		attributes.put("postedDate", getPostedDate());
		attributes.put("approved", getApproved());
		attributes.put("approvedByUser", getApprovedByUser());
		attributes.put("approvedDate", getApprovedDate());
		attributes.put("articleId", getArticleId());
		attributes.put("title", getTitle());
		attributes.put("content", getContent());
		attributes.put("language", getLanguage());
		attributes.put("hasAttachment", getHasAttachment());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String discussionId = (String)attributes.get("discussionId");

		if (discussionId != null) {
			setDiscussionId(discussionId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String visitorName = (String)attributes.get("visitorName");

		if (visitorName != null) {
			setVisitorName(visitorName);
		}

		String visitorEmail = (String)attributes.get("visitorEmail");

		if (visitorEmail != null) {
			setVisitorEmail(visitorEmail);
		}

		String visitorPhone = (String)attributes.get("visitorPhone");

		if (visitorPhone != null) {
			setVisitorPhone(visitorPhone);
		}

		Date postedDate = (Date)attributes.get("postedDate");

		if (postedDate != null) {
			setPostedDate(postedDate);
		}

		Boolean approved = (Boolean)attributes.get("approved");

		if (approved != null) {
			setApproved(approved);
		}

		String approvedByUser = (String)attributes.get("approvedByUser");

		if (approvedByUser != null) {
			setApprovedByUser(approvedByUser);
		}

		Date approvedDate = (Date)attributes.get("approvedDate");

		if (approvedDate != null) {
			setApprovedDate(approvedDate);
		}

		String articleId = (String)attributes.get("articleId");

		if (articleId != null) {
			setArticleId(articleId);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String content = (String)attributes.get("content");

		if (content != null) {
			setContent(content);
		}

		String language = (String)attributes.get("language");

		if (language != null) {
			setLanguage(language);
		}

		Boolean hasAttachment = (Boolean)attributes.get("hasAttachment");

		if (hasAttachment != null) {
			setHasAttachment(hasAttachment);
		}
	}

	@Override
	public String getDiscussionId() {
		if (_discussionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _discussionId;
		}
	}

	@Override
	public void setDiscussionId(String discussionId) {
		_discussionId = discussionId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public String getVisitorName() {
		if (_visitorName == null) {
			return StringPool.BLANK;
		}
		else {
			return _visitorName;
		}
	}

	@Override
	public void setVisitorName(String visitorName) {
		_visitorName = visitorName;
	}

	@Override
	public String getVisitorEmail() {
		if (_visitorEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _visitorEmail;
		}
	}

	@Override
	public void setVisitorEmail(String visitorEmail) {
		_visitorEmail = visitorEmail;
	}

	@Override
	public String getVisitorPhone() {
		if (_visitorPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _visitorPhone;
		}
	}

	@Override
	public void setVisitorPhone(String visitorPhone) {
		_visitorPhone = visitorPhone;
	}

	@Override
	public Date getPostedDate() {
		return _postedDate;
	}

	@Override
	public void setPostedDate(Date postedDate) {
		_columnBitmask = -1L;

		_postedDate = postedDate;
	}

	@Override
	public boolean getApproved() {
		return _approved;
	}

	@Override
	public boolean isApproved() {
		return _approved;
	}

	@Override
	public void setApproved(boolean approved) {
		_columnBitmask |= APPROVED_COLUMN_BITMASK;

		if (!_setOriginalApproved) {
			_setOriginalApproved = true;

			_originalApproved = _approved;
		}

		_approved = approved;
	}

	public boolean getOriginalApproved() {
		return _originalApproved;
	}

	@Override
	public String getApprovedByUser() {
		if (_approvedByUser == null) {
			return StringPool.BLANK;
		}
		else {
			return _approvedByUser;
		}
	}

	@Override
	public void setApprovedByUser(String approvedByUser) {
		_approvedByUser = approvedByUser;
	}

	@Override
	public Date getApprovedDate() {
		return _approvedDate;
	}

	@Override
	public void setApprovedDate(Date approvedDate) {
		_approvedDate = approvedDate;
	}

	@Override
	public String getArticleId() {
		if (_articleId == null) {
			return StringPool.BLANK;
		}
		else {
			return _articleId;
		}
	}

	@Override
	public void setArticleId(String articleId) {
		_columnBitmask |= ARTICLEID_COLUMN_BITMASK;

		if (_originalArticleId == null) {
			_originalArticleId = _articleId;
		}

		_articleId = articleId;
	}

	public String getOriginalArticleId() {
		return GetterUtil.getString(_originalArticleId);
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_content = content;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		_columnBitmask |= LANGUAGE_COLUMN_BITMASK;

		if (_originalLanguage == null) {
			_originalLanguage = _language;
		}

		_language = language;
	}

	public String getOriginalLanguage() {
		return GetterUtil.getString(_originalLanguage);
	}

	@Override
	public boolean getHasAttachment() {
		return _hasAttachment;
	}

	@Override
	public boolean isHasAttachment() {
		return _hasAttachment;
	}

	@Override
	public void setHasAttachment(boolean hasAttachment) {
		_hasAttachment = hasAttachment;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VcmsDiscussion toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VcmsDiscussion)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VcmsDiscussionImpl vcmsDiscussionImpl = new VcmsDiscussionImpl();

		vcmsDiscussionImpl.setDiscussionId(getDiscussionId());
		vcmsDiscussionImpl.setGroupId(getGroupId());
		vcmsDiscussionImpl.setCompanyId(getCompanyId());
		vcmsDiscussionImpl.setVisitorName(getVisitorName());
		vcmsDiscussionImpl.setVisitorEmail(getVisitorEmail());
		vcmsDiscussionImpl.setVisitorPhone(getVisitorPhone());
		vcmsDiscussionImpl.setPostedDate(getPostedDate());
		vcmsDiscussionImpl.setApproved(getApproved());
		vcmsDiscussionImpl.setApprovedByUser(getApprovedByUser());
		vcmsDiscussionImpl.setApprovedDate(getApprovedDate());
		vcmsDiscussionImpl.setArticleId(getArticleId());
		vcmsDiscussionImpl.setTitle(getTitle());
		vcmsDiscussionImpl.setContent(getContent());
		vcmsDiscussionImpl.setLanguage(getLanguage());
		vcmsDiscussionImpl.setHasAttachment(getHasAttachment());

		vcmsDiscussionImpl.resetOriginalValues();

		return vcmsDiscussionImpl;
	}

	@Override
	public int compareTo(VcmsDiscussion vcmsDiscussion) {
		int value = 0;

		value = DateUtil.compareTo(getPostedDate(),
				vcmsDiscussion.getPostedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VcmsDiscussion)) {
			return false;
		}

		VcmsDiscussion vcmsDiscussion = (VcmsDiscussion)obj;

		String primaryKey = vcmsDiscussion.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VcmsDiscussionModelImpl vcmsDiscussionModelImpl = this;

		vcmsDiscussionModelImpl._originalGroupId = vcmsDiscussionModelImpl._groupId;

		vcmsDiscussionModelImpl._setOriginalGroupId = false;

		vcmsDiscussionModelImpl._originalApproved = vcmsDiscussionModelImpl._approved;

		vcmsDiscussionModelImpl._setOriginalApproved = false;

		vcmsDiscussionModelImpl._originalArticleId = vcmsDiscussionModelImpl._articleId;

		vcmsDiscussionModelImpl._originalLanguage = vcmsDiscussionModelImpl._language;

		vcmsDiscussionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VcmsDiscussion> toCacheModel() {
		VcmsDiscussionCacheModel vcmsDiscussionCacheModel = new VcmsDiscussionCacheModel();

		vcmsDiscussionCacheModel.discussionId = getDiscussionId();

		String discussionId = vcmsDiscussionCacheModel.discussionId;

		if ((discussionId != null) && (discussionId.length() == 0)) {
			vcmsDiscussionCacheModel.discussionId = null;
		}

		vcmsDiscussionCacheModel.groupId = getGroupId();

		vcmsDiscussionCacheModel.companyId = getCompanyId();

		vcmsDiscussionCacheModel.visitorName = getVisitorName();

		String visitorName = vcmsDiscussionCacheModel.visitorName;

		if ((visitorName != null) && (visitorName.length() == 0)) {
			vcmsDiscussionCacheModel.visitorName = null;
		}

		vcmsDiscussionCacheModel.visitorEmail = getVisitorEmail();

		String visitorEmail = vcmsDiscussionCacheModel.visitorEmail;

		if ((visitorEmail != null) && (visitorEmail.length() == 0)) {
			vcmsDiscussionCacheModel.visitorEmail = null;
		}

		vcmsDiscussionCacheModel.visitorPhone = getVisitorPhone();

		String visitorPhone = vcmsDiscussionCacheModel.visitorPhone;

		if ((visitorPhone != null) && (visitorPhone.length() == 0)) {
			vcmsDiscussionCacheModel.visitorPhone = null;
		}

		Date postedDate = getPostedDate();

		if (postedDate != null) {
			vcmsDiscussionCacheModel.postedDate = postedDate.getTime();
		}
		else {
			vcmsDiscussionCacheModel.postedDate = Long.MIN_VALUE;
		}

		vcmsDiscussionCacheModel.approved = getApproved();

		vcmsDiscussionCacheModel.approvedByUser = getApprovedByUser();

		String approvedByUser = vcmsDiscussionCacheModel.approvedByUser;

		if ((approvedByUser != null) && (approvedByUser.length() == 0)) {
			vcmsDiscussionCacheModel.approvedByUser = null;
		}

		Date approvedDate = getApprovedDate();

		if (approvedDate != null) {
			vcmsDiscussionCacheModel.approvedDate = approvedDate.getTime();
		}
		else {
			vcmsDiscussionCacheModel.approvedDate = Long.MIN_VALUE;
		}

		vcmsDiscussionCacheModel.articleId = getArticleId();

		String articleId = vcmsDiscussionCacheModel.articleId;

		if ((articleId != null) && (articleId.length() == 0)) {
			vcmsDiscussionCacheModel.articleId = null;
		}

		vcmsDiscussionCacheModel.title = getTitle();

		String title = vcmsDiscussionCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			vcmsDiscussionCacheModel.title = null;
		}

		vcmsDiscussionCacheModel.content = getContent();

		String content = vcmsDiscussionCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			vcmsDiscussionCacheModel.content = null;
		}

		vcmsDiscussionCacheModel.language = getLanguage();

		String language = vcmsDiscussionCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			vcmsDiscussionCacheModel.language = null;
		}

		vcmsDiscussionCacheModel.hasAttachment = getHasAttachment();

		return vcmsDiscussionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{discussionId=");
		sb.append(getDiscussionId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", visitorName=");
		sb.append(getVisitorName());
		sb.append(", visitorEmail=");
		sb.append(getVisitorEmail());
		sb.append(", visitorPhone=");
		sb.append(getVisitorPhone());
		sb.append(", postedDate=");
		sb.append(getPostedDate());
		sb.append(", approved=");
		sb.append(getApproved());
		sb.append(", approvedByUser=");
		sb.append(getApprovedByUser());
		sb.append(", approvedDate=");
		sb.append(getApprovedDate());
		sb.append(", articleId=");
		sb.append(getArticleId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", hasAttachment=");
		sb.append(getHasAttachment());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.VcmsDiscussion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>discussionId</column-name><column-value><![CDATA[");
		sb.append(getDiscussionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visitorName</column-name><column-value><![CDATA[");
		sb.append(getVisitorName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visitorEmail</column-name><column-value><![CDATA[");
		sb.append(getVisitorEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visitorPhone</column-name><column-value><![CDATA[");
		sb.append(getVisitorPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postedDate</column-name><column-value><![CDATA[");
		sb.append(getPostedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approved</column-name><column-value><![CDATA[");
		sb.append(getApproved());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedByUser</column-name><column-value><![CDATA[");
		sb.append(getApprovedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedDate</column-name><column-value><![CDATA[");
		sb.append(getApprovedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleId</column-name><column-value><![CDATA[");
		sb.append(getArticleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hasAttachment</column-name><column-value><![CDATA[");
		sb.append(getHasAttachment());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VcmsDiscussion.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VcmsDiscussion.class
		};
	private String _discussionId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private String _visitorName;
	private String _visitorEmail;
	private String _visitorPhone;
	private Date _postedDate;
	private boolean _approved;
	private boolean _originalApproved;
	private boolean _setOriginalApproved;
	private String _approvedByUser;
	private Date _approvedDate;
	private String _articleId;
	private String _originalArticleId;
	private String _title;
	private String _content;
	private String _language;
	private String _originalLanguage;
	private boolean _hasAttachment;
	private long _columnBitmask;
	private VcmsDiscussion _escapedModel;
}