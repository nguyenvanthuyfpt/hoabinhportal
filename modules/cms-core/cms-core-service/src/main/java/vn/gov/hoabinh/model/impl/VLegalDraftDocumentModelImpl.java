/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.VLegalDraftDocument;
import vn.gov.hoabinh.model.VLegalDraftDocumentModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VLegalDraftDocument service. Represents a row in the &quot;VLegalDraftDocument&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VLegalDraftDocumentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLegalDraftDocumentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VLegalDraftDocumentImpl
 * @see VLegalDraftDocument
 * @see VLegalDraftDocumentModel
 * @generated
 */
@ProviderType
public class VLegalDraftDocumentModelImpl extends BaseModelImpl<VLegalDraftDocument>
	implements VLegalDraftDocumentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v legal draft document model instance should use the {@link VLegalDraftDocument} interface instead.
	 */
	public static final String TABLE_NAME = "VLegalDraftDocument";
	public static final Object[][] TABLE_COLUMNS = {
			{ "draftId", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdByUser", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedByUser", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "approvedByUser", Types.BIGINT },
			{ "approvedDate", Types.TIMESTAMP },
			{ "publishedByUser", Types.BIGINT },
			{ "publishedDate", Types.TIMESTAMP },
			{ "title", Types.VARCHAR },
			{ "expiredDate", Types.TIMESTAMP },
			{ "language", Types.VARCHAR },
			{ "content", Types.VARCHAR },
			{ "typeId", Types.VARCHAR },
			{ "fieldId", Types.VARCHAR },
			{ "hasAttachment", Types.BOOLEAN },
			{ "draftLevel", Types.INTEGER },
			{ "docCode", Types.VARCHAR },
			{ "statusDraft", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("draftId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("approvedByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("approvedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("publishedByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("publishedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expiredDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("typeId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fieldId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hasAttachment", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("draftLevel", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("docCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDraft", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table VLegalDraftDocument (draftId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,userId LONG,createdByUser LONG,createdDate DATE null,modifiedByUser LONG,modifiedDate DATE null,approvedByUser LONG,approvedDate DATE null,publishedByUser LONG,publishedDate DATE null,title VARCHAR(75) null,expiredDate DATE null,language VARCHAR(75) null,content VARCHAR(75) null,typeId VARCHAR(75) null,fieldId VARCHAR(75) null,hasAttachment BOOLEAN,draftLevel INTEGER,docCode VARCHAR(75) null,statusDraft INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table VLegalDraftDocument";
	public static final String ORDER_BY_JPQL = " ORDER BY vLegalDraftDocument.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VLegalDraftDocument.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.VLegalDraftDocument"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.VLegalDraftDocument"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.VLegalDraftDocument"),
			true);
	public static final long CREATEDBYUSER_COLUMN_BITMASK = 1L;
	public static final long DOCCODE_COLUMN_BITMASK = 2L;
	public static final long DRAFTID_COLUMN_BITMASK = 4L;
	public static final long FIELDID_COLUMN_BITMASK = 8L;
	public static final long GROUPID_COLUMN_BITMASK = 16L;
	public static final long LANGUAGE_COLUMN_BITMASK = 32L;
	public static final long STATUSDRAFT_COLUMN_BITMASK = 64L;
	public static final long TYPEID_COLUMN_BITMASK = 128L;
	public static final long CREATEDDATE_COLUMN_BITMASK = 256L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.VLegalDraftDocument"));

	public VLegalDraftDocumentModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _draftId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setDraftId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _draftId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VLegalDraftDocument.class;
	}

	@Override
	public String getModelClassName() {
		return VLegalDraftDocument.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("draftId", getDraftId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createdByUser", getCreatedByUser());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedByUser", getModifiedByUser());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("approvedByUser", getApprovedByUser());
		attributes.put("approvedDate", getApprovedDate());
		attributes.put("publishedByUser", getPublishedByUser());
		attributes.put("publishedDate", getPublishedDate());
		attributes.put("title", getTitle());
		attributes.put("expiredDate", getExpiredDate());
		attributes.put("language", getLanguage());
		attributes.put("content", getContent());
		attributes.put("typeId", getTypeId());
		attributes.put("fieldId", getFieldId());
		attributes.put("hasAttachment", getHasAttachment());
		attributes.put("draftLevel", getDraftLevel());
		attributes.put("docCode", getDocCode());
		attributes.put("statusDraft", getStatusDraft());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String draftId = (String)attributes.get("draftId");

		if (draftId != null) {
			setDraftId(draftId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long createdByUser = (Long)attributes.get("createdByUser");

		if (createdByUser != null) {
			setCreatedByUser(createdByUser);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Long modifiedByUser = (Long)attributes.get("modifiedByUser");

		if (modifiedByUser != null) {
			setModifiedByUser(modifiedByUser);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long approvedByUser = (Long)attributes.get("approvedByUser");

		if (approvedByUser != null) {
			setApprovedByUser(approvedByUser);
		}

		Date approvedDate = (Date)attributes.get("approvedDate");

		if (approvedDate != null) {
			setApprovedDate(approvedDate);
		}

		Long publishedByUser = (Long)attributes.get("publishedByUser");

		if (publishedByUser != null) {
			setPublishedByUser(publishedByUser);
		}

		Date publishedDate = (Date)attributes.get("publishedDate");

		if (publishedDate != null) {
			setPublishedDate(publishedDate);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		Date expiredDate = (Date)attributes.get("expiredDate");

		if (expiredDate != null) {
			setExpiredDate(expiredDate);
		}

		String language = (String)attributes.get("language");

		if (language != null) {
			setLanguage(language);
		}

		String content = (String)attributes.get("content");

		if (content != null) {
			setContent(content);
		}

		String typeId = (String)attributes.get("typeId");

		if (typeId != null) {
			setTypeId(typeId);
		}

		String fieldId = (String)attributes.get("fieldId");

		if (fieldId != null) {
			setFieldId(fieldId);
		}

		Boolean hasAttachment = (Boolean)attributes.get("hasAttachment");

		if (hasAttachment != null) {
			setHasAttachment(hasAttachment);
		}

		Integer draftLevel = (Integer)attributes.get("draftLevel");

		if (draftLevel != null) {
			setDraftLevel(draftLevel);
		}

		String docCode = (String)attributes.get("docCode");

		if (docCode != null) {
			setDocCode(docCode);
		}

		Integer statusDraft = (Integer)attributes.get("statusDraft");

		if (statusDraft != null) {
			setStatusDraft(statusDraft);
		}
	}

	@Override
	public String getDraftId() {
		if (_draftId == null) {
			return StringPool.BLANK;
		}
		else {
			return _draftId;
		}
	}

	@Override
	public void setDraftId(String draftId) {
		_columnBitmask |= DRAFTID_COLUMN_BITMASK;

		if (_originalDraftId == null) {
			_originalDraftId = _draftId;
		}

		_draftId = draftId;
	}

	public String getOriginalDraftId() {
		return GetterUtil.getString(_originalDraftId);
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public long getCreatedByUser() {
		return _createdByUser;
	}

	@Override
	public void setCreatedByUser(long createdByUser) {
		_columnBitmask |= CREATEDBYUSER_COLUMN_BITMASK;

		if (!_setOriginalCreatedByUser) {
			_setOriginalCreatedByUser = true;

			_originalCreatedByUser = _createdByUser;
		}

		_createdByUser = createdByUser;
	}

	public long getOriginalCreatedByUser() {
		return _originalCreatedByUser;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_columnBitmask = -1L;

		_createdDate = createdDate;
	}

	@Override
	public long getModifiedByUser() {
		return _modifiedByUser;
	}

	@Override
	public void setModifiedByUser(long modifiedByUser) {
		_modifiedByUser = modifiedByUser;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getApprovedByUser() {
		return _approvedByUser;
	}

	@Override
	public void setApprovedByUser(long approvedByUser) {
		_approvedByUser = approvedByUser;
	}

	@Override
	public Date getApprovedDate() {
		return _approvedDate;
	}

	@Override
	public void setApprovedDate(Date approvedDate) {
		_approvedDate = approvedDate;
	}

	@Override
	public long getPublishedByUser() {
		return _publishedByUser;
	}

	@Override
	public void setPublishedByUser(long publishedByUser) {
		_publishedByUser = publishedByUser;
	}

	@Override
	public Date getPublishedDate() {
		return _publishedDate;
	}

	@Override
	public void setPublishedDate(Date publishedDate) {
		_publishedDate = publishedDate;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public Date getExpiredDate() {
		return _expiredDate;
	}

	@Override
	public void setExpiredDate(Date expiredDate) {
		_expiredDate = expiredDate;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		_columnBitmask |= LANGUAGE_COLUMN_BITMASK;

		if (_originalLanguage == null) {
			_originalLanguage = _language;
		}

		_language = language;
	}

	public String getOriginalLanguage() {
		return GetterUtil.getString(_originalLanguage);
	}

	@Override
	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_content = content;
	}

	@Override
	public String getTypeId() {
		if (_typeId == null) {
			return StringPool.BLANK;
		}
		else {
			return _typeId;
		}
	}

	@Override
	public void setTypeId(String typeId) {
		_columnBitmask |= TYPEID_COLUMN_BITMASK;

		if (_originalTypeId == null) {
			_originalTypeId = _typeId;
		}

		_typeId = typeId;
	}

	public String getOriginalTypeId() {
		return GetterUtil.getString(_originalTypeId);
	}

	@Override
	public String getFieldId() {
		if (_fieldId == null) {
			return StringPool.BLANK;
		}
		else {
			return _fieldId;
		}
	}

	@Override
	public void setFieldId(String fieldId) {
		_columnBitmask |= FIELDID_COLUMN_BITMASK;

		if (_originalFieldId == null) {
			_originalFieldId = _fieldId;
		}

		_fieldId = fieldId;
	}

	public String getOriginalFieldId() {
		return GetterUtil.getString(_originalFieldId);
	}

	@Override
	public boolean getHasAttachment() {
		return _hasAttachment;
	}

	@Override
	public boolean isHasAttachment() {
		return _hasAttachment;
	}

	@Override
	public void setHasAttachment(boolean hasAttachment) {
		_hasAttachment = hasAttachment;
	}

	@Override
	public int getDraftLevel() {
		return _draftLevel;
	}

	@Override
	public void setDraftLevel(int draftLevel) {
		_draftLevel = draftLevel;
	}

	@Override
	public String getDocCode() {
		if (_docCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _docCode;
		}
	}

	@Override
	public void setDocCode(String docCode) {
		_columnBitmask |= DOCCODE_COLUMN_BITMASK;

		if (_originalDocCode == null) {
			_originalDocCode = _docCode;
		}

		_docCode = docCode;
	}

	public String getOriginalDocCode() {
		return GetterUtil.getString(_originalDocCode);
	}

	@Override
	public int getStatusDraft() {
		return _statusDraft;
	}

	@Override
	public void setStatusDraft(int statusDraft) {
		_columnBitmask |= STATUSDRAFT_COLUMN_BITMASK;

		if (!_setOriginalStatusDraft) {
			_setOriginalStatusDraft = true;

			_originalStatusDraft = _statusDraft;
		}

		_statusDraft = statusDraft;
	}

	public int getOriginalStatusDraft() {
		return _originalStatusDraft;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VLegalDraftDocument toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VLegalDraftDocument)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VLegalDraftDocumentImpl vLegalDraftDocumentImpl = new VLegalDraftDocumentImpl();

		vLegalDraftDocumentImpl.setDraftId(getDraftId());
		vLegalDraftDocumentImpl.setGroupId(getGroupId());
		vLegalDraftDocumentImpl.setCompanyId(getCompanyId());
		vLegalDraftDocumentImpl.setUserId(getUserId());
		vLegalDraftDocumentImpl.setCreatedByUser(getCreatedByUser());
		vLegalDraftDocumentImpl.setCreatedDate(getCreatedDate());
		vLegalDraftDocumentImpl.setModifiedByUser(getModifiedByUser());
		vLegalDraftDocumentImpl.setModifiedDate(getModifiedDate());
		vLegalDraftDocumentImpl.setApprovedByUser(getApprovedByUser());
		vLegalDraftDocumentImpl.setApprovedDate(getApprovedDate());
		vLegalDraftDocumentImpl.setPublishedByUser(getPublishedByUser());
		vLegalDraftDocumentImpl.setPublishedDate(getPublishedDate());
		vLegalDraftDocumentImpl.setTitle(getTitle());
		vLegalDraftDocumentImpl.setExpiredDate(getExpiredDate());
		vLegalDraftDocumentImpl.setLanguage(getLanguage());
		vLegalDraftDocumentImpl.setContent(getContent());
		vLegalDraftDocumentImpl.setTypeId(getTypeId());
		vLegalDraftDocumentImpl.setFieldId(getFieldId());
		vLegalDraftDocumentImpl.setHasAttachment(getHasAttachment());
		vLegalDraftDocumentImpl.setDraftLevel(getDraftLevel());
		vLegalDraftDocumentImpl.setDocCode(getDocCode());
		vLegalDraftDocumentImpl.setStatusDraft(getStatusDraft());

		vLegalDraftDocumentImpl.resetOriginalValues();

		return vLegalDraftDocumentImpl;
	}

	@Override
	public int compareTo(VLegalDraftDocument vLegalDraftDocument) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(),
				vLegalDraftDocument.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VLegalDraftDocument)) {
			return false;
		}

		VLegalDraftDocument vLegalDraftDocument = (VLegalDraftDocument)obj;

		String primaryKey = vLegalDraftDocument.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VLegalDraftDocumentModelImpl vLegalDraftDocumentModelImpl = this;

		vLegalDraftDocumentModelImpl._originalDraftId = vLegalDraftDocumentModelImpl._draftId;

		vLegalDraftDocumentModelImpl._originalGroupId = vLegalDraftDocumentModelImpl._groupId;

		vLegalDraftDocumentModelImpl._setOriginalGroupId = false;

		vLegalDraftDocumentModelImpl._originalCreatedByUser = vLegalDraftDocumentModelImpl._createdByUser;

		vLegalDraftDocumentModelImpl._setOriginalCreatedByUser = false;

		vLegalDraftDocumentModelImpl._originalLanguage = vLegalDraftDocumentModelImpl._language;

		vLegalDraftDocumentModelImpl._originalTypeId = vLegalDraftDocumentModelImpl._typeId;

		vLegalDraftDocumentModelImpl._originalFieldId = vLegalDraftDocumentModelImpl._fieldId;

		vLegalDraftDocumentModelImpl._originalDocCode = vLegalDraftDocumentModelImpl._docCode;

		vLegalDraftDocumentModelImpl._originalStatusDraft = vLegalDraftDocumentModelImpl._statusDraft;

		vLegalDraftDocumentModelImpl._setOriginalStatusDraft = false;

		vLegalDraftDocumentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VLegalDraftDocument> toCacheModel() {
		VLegalDraftDocumentCacheModel vLegalDraftDocumentCacheModel = new VLegalDraftDocumentCacheModel();

		vLegalDraftDocumentCacheModel.draftId = getDraftId();

		String draftId = vLegalDraftDocumentCacheModel.draftId;

		if ((draftId != null) && (draftId.length() == 0)) {
			vLegalDraftDocumentCacheModel.draftId = null;
		}

		vLegalDraftDocumentCacheModel.groupId = getGroupId();

		vLegalDraftDocumentCacheModel.companyId = getCompanyId();

		vLegalDraftDocumentCacheModel.userId = getUserId();

		vLegalDraftDocumentCacheModel.createdByUser = getCreatedByUser();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			vLegalDraftDocumentCacheModel.createdDate = createdDate.getTime();
		}
		else {
			vLegalDraftDocumentCacheModel.createdDate = Long.MIN_VALUE;
		}

		vLegalDraftDocumentCacheModel.modifiedByUser = getModifiedByUser();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vLegalDraftDocumentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vLegalDraftDocumentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vLegalDraftDocumentCacheModel.approvedByUser = getApprovedByUser();

		Date approvedDate = getApprovedDate();

		if (approvedDate != null) {
			vLegalDraftDocumentCacheModel.approvedDate = approvedDate.getTime();
		}
		else {
			vLegalDraftDocumentCacheModel.approvedDate = Long.MIN_VALUE;
		}

		vLegalDraftDocumentCacheModel.publishedByUser = getPublishedByUser();

		Date publishedDate = getPublishedDate();

		if (publishedDate != null) {
			vLegalDraftDocumentCacheModel.publishedDate = publishedDate.getTime();
		}
		else {
			vLegalDraftDocumentCacheModel.publishedDate = Long.MIN_VALUE;
		}

		vLegalDraftDocumentCacheModel.title = getTitle();

		String title = vLegalDraftDocumentCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			vLegalDraftDocumentCacheModel.title = null;
		}

		Date expiredDate = getExpiredDate();

		if (expiredDate != null) {
			vLegalDraftDocumentCacheModel.expiredDate = expiredDate.getTime();
		}
		else {
			vLegalDraftDocumentCacheModel.expiredDate = Long.MIN_VALUE;
		}

		vLegalDraftDocumentCacheModel.language = getLanguage();

		String language = vLegalDraftDocumentCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			vLegalDraftDocumentCacheModel.language = null;
		}

		vLegalDraftDocumentCacheModel.content = getContent();

		String content = vLegalDraftDocumentCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			vLegalDraftDocumentCacheModel.content = null;
		}

		vLegalDraftDocumentCacheModel.typeId = getTypeId();

		String typeId = vLegalDraftDocumentCacheModel.typeId;

		if ((typeId != null) && (typeId.length() == 0)) {
			vLegalDraftDocumentCacheModel.typeId = null;
		}

		vLegalDraftDocumentCacheModel.fieldId = getFieldId();

		String fieldId = vLegalDraftDocumentCacheModel.fieldId;

		if ((fieldId != null) && (fieldId.length() == 0)) {
			vLegalDraftDocumentCacheModel.fieldId = null;
		}

		vLegalDraftDocumentCacheModel.hasAttachment = getHasAttachment();

		vLegalDraftDocumentCacheModel.draftLevel = getDraftLevel();

		vLegalDraftDocumentCacheModel.docCode = getDocCode();

		String docCode = vLegalDraftDocumentCacheModel.docCode;

		if ((docCode != null) && (docCode.length() == 0)) {
			vLegalDraftDocumentCacheModel.docCode = null;
		}

		vLegalDraftDocumentCacheModel.statusDraft = getStatusDraft();

		return vLegalDraftDocumentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{draftId=");
		sb.append(getDraftId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdByUser=");
		sb.append(getCreatedByUser());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedByUser=");
		sb.append(getModifiedByUser());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", approvedByUser=");
		sb.append(getApprovedByUser());
		sb.append(", approvedDate=");
		sb.append(getApprovedDate());
		sb.append(", publishedByUser=");
		sb.append(getPublishedByUser());
		sb.append(", publishedDate=");
		sb.append(getPublishedDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", expiredDate=");
		sb.append(getExpiredDate());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", typeId=");
		sb.append(getTypeId());
		sb.append(", fieldId=");
		sb.append(getFieldId());
		sb.append(", hasAttachment=");
		sb.append(getHasAttachment());
		sb.append(", draftLevel=");
		sb.append(getDraftLevel());
		sb.append(", docCode=");
		sb.append(getDocCode());
		sb.append(", statusDraft=");
		sb.append(getStatusDraft());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.VLegalDraftDocument");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>draftId</column-name><column-value><![CDATA[");
		sb.append(getDraftId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdByUser</column-name><column-value><![CDATA[");
		sb.append(getCreatedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedByUser</column-name><column-value><![CDATA[");
		sb.append(getModifiedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedByUser</column-name><column-value><![CDATA[");
		sb.append(getApprovedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedDate</column-name><column-value><![CDATA[");
		sb.append(getApprovedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishedByUser</column-name><column-value><![CDATA[");
		sb.append(getPublishedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishedDate</column-name><column-value><![CDATA[");
		sb.append(getPublishedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiredDate</column-name><column-value><![CDATA[");
		sb.append(getExpiredDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeId</column-name><column-value><![CDATA[");
		sb.append(getTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fieldId</column-name><column-value><![CDATA[");
		sb.append(getFieldId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hasAttachment</column-name><column-value><![CDATA[");
		sb.append(getHasAttachment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>draftLevel</column-name><column-value><![CDATA[");
		sb.append(getDraftLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docCode</column-name><column-value><![CDATA[");
		sb.append(getDocCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDraft</column-name><column-value><![CDATA[");
		sb.append(getStatusDraft());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VLegalDraftDocument.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VLegalDraftDocument.class
		};
	private String _draftId;
	private String _originalDraftId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private long _createdByUser;
	private long _originalCreatedByUser;
	private boolean _setOriginalCreatedByUser;
	private Date _createdDate;
	private long _modifiedByUser;
	private Date _modifiedDate;
	private long _approvedByUser;
	private Date _approvedDate;
	private long _publishedByUser;
	private Date _publishedDate;
	private String _title;
	private Date _expiredDate;
	private String _language;
	private String _originalLanguage;
	private String _content;
	private String _typeId;
	private String _originalTypeId;
	private String _fieldId;
	private String _originalFieldId;
	private boolean _hasAttachment;
	private int _draftLevel;
	private String _docCode;
	private String _originalDocCode;
	private int _statusDraft;
	private int _originalStatusDraft;
	private boolean _setOriginalStatusDraft;
	private long _columnBitmask;
	private VLegalDraftDocument _escapedModel;
}