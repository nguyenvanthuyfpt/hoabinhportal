/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.VLegalTDRel;
import vn.gov.hoabinh.model.VLegalTDRelModel;
import vn.gov.hoabinh.service.persistence.VLegalTDRelPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VLegalTDRel service. Represents a row in the &quot;VLegalTDRel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VLegalTDRelModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLegalTDRelImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VLegalTDRelImpl
 * @see VLegalTDRel
 * @see VLegalTDRelModel
 * @generated
 */
@ProviderType
public class VLegalTDRelModelImpl extends BaseModelImpl<VLegalTDRel>
	implements VLegalTDRelModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v legal t d rel model instance should use the {@link VLegalTDRel} interface instead.
	 */
	public static final String TABLE_NAME = "VLegalTDRel";
	public static final Object[][] TABLE_COLUMNS = {
			{ "docId", Types.VARCHAR },
			{ "tagId", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("docId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tagId", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table VLegalTDRel (docId VARCHAR(75) not null,tagId VARCHAR(75) not null,primary key (docId, tagId))";
	public static final String TABLE_SQL_DROP = "drop table VLegalTDRel";
	public static final String ORDER_BY_JPQL = " ORDER BY vLegalTDRel.id.docId DESC, vLegalTDRel.id.tagId DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VLegalTDRel.docId DESC, VLegalTDRel.tagId DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.VLegalTDRel"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.VLegalTDRel"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.VLegalTDRel"),
			true);
	public static final long DOCID_COLUMN_BITMASK = 1L;
	public static final long TAGID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.VLegalTDRel"));

	public VLegalTDRelModelImpl() {
	}

	@Override
	public VLegalTDRelPK getPrimaryKey() {
		return new VLegalTDRelPK(_docId, _tagId);
	}

	@Override
	public void setPrimaryKey(VLegalTDRelPK primaryKey) {
		setDocId(primaryKey.docId);
		setTagId(primaryKey.tagId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new VLegalTDRelPK(_docId, _tagId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((VLegalTDRelPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VLegalTDRel.class;
	}

	@Override
	public String getModelClassName() {
		return VLegalTDRel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("docId", getDocId());
		attributes.put("tagId", getTagId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String docId = (String)attributes.get("docId");

		if (docId != null) {
			setDocId(docId);
		}

		String tagId = (String)attributes.get("tagId");

		if (tagId != null) {
			setTagId(tagId);
		}
	}

	@Override
	public String getDocId() {
		if (_docId == null) {
			return StringPool.BLANK;
		}
		else {
			return _docId;
		}
	}

	@Override
	public void setDocId(String docId) {
		_columnBitmask = -1L;

		if (_originalDocId == null) {
			_originalDocId = _docId;
		}

		_docId = docId;
	}

	public String getOriginalDocId() {
		return GetterUtil.getString(_originalDocId);
	}

	@Override
	public String getTagId() {
		if (_tagId == null) {
			return StringPool.BLANK;
		}
		else {
			return _tagId;
		}
	}

	@Override
	public void setTagId(String tagId) {
		_columnBitmask = -1L;

		if (_originalTagId == null) {
			_originalTagId = _tagId;
		}

		_tagId = tagId;
	}

	public String getOriginalTagId() {
		return GetterUtil.getString(_originalTagId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VLegalTDRel toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VLegalTDRel)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VLegalTDRelImpl vLegalTDRelImpl = new VLegalTDRelImpl();

		vLegalTDRelImpl.setDocId(getDocId());
		vLegalTDRelImpl.setTagId(getTagId());

		vLegalTDRelImpl.resetOriginalValues();

		return vLegalTDRelImpl;
	}

	@Override
	public int compareTo(VLegalTDRel vLegalTDRel) {
		int value = 0;

		value = getDocId().compareTo(vLegalTDRel.getDocId());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		value = getTagId().compareTo(vLegalTDRel.getTagId());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VLegalTDRel)) {
			return false;
		}

		VLegalTDRel vLegalTDRel = (VLegalTDRel)obj;

		VLegalTDRelPK primaryKey = vLegalTDRel.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VLegalTDRelModelImpl vLegalTDRelModelImpl = this;

		vLegalTDRelModelImpl._originalDocId = vLegalTDRelModelImpl._docId;

		vLegalTDRelModelImpl._originalTagId = vLegalTDRelModelImpl._tagId;

		vLegalTDRelModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VLegalTDRel> toCacheModel() {
		VLegalTDRelCacheModel vLegalTDRelCacheModel = new VLegalTDRelCacheModel();

		vLegalTDRelCacheModel.vLegalTDRelPK = getPrimaryKey();

		vLegalTDRelCacheModel.docId = getDocId();

		String docId = vLegalTDRelCacheModel.docId;

		if ((docId != null) && (docId.length() == 0)) {
			vLegalTDRelCacheModel.docId = null;
		}

		vLegalTDRelCacheModel.tagId = getTagId();

		String tagId = vLegalTDRelCacheModel.tagId;

		if ((tagId != null) && (tagId.length() == 0)) {
			vLegalTDRelCacheModel.tagId = null;
		}

		return vLegalTDRelCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{docId=");
		sb.append(getDocId());
		sb.append(", tagId=");
		sb.append(getTagId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.VLegalTDRel");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>docId</column-name><column-value><![CDATA[");
		sb.append(getDocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tagId</column-name><column-value><![CDATA[");
		sb.append(getTagId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VLegalTDRel.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VLegalTDRel.class
		};
	private String _docId;
	private String _originalDocId;
	private String _tagId;
	private String _originalTagId;
	private long _columnBitmask;
	private VLegalTDRel _escapedModel;
}