/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.VLegalSigner;
import vn.gov.hoabinh.model.VLegalSignerModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VLegalSigner service. Represents a row in the &quot;VLegalSigner&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VLegalSignerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLegalSignerImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VLegalSignerImpl
 * @see VLegalSigner
 * @see VLegalSignerModel
 * @generated
 */
@ProviderType
public class VLegalSignerModelImpl extends BaseModelImpl<VLegalSigner>
	implements VLegalSignerModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v legal signer model instance should use the {@link VLegalSigner} interface instead.
	 */
	public static final String TABLE_NAME = "VLegalSigner";
	public static final Object[][] TABLE_COLUMNS = {
			{ "sigId", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "createdByUser", Types.BIGINT },
			{ "modifiedByUser", Types.BIGINT },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "language", Types.VARCHAR },
			{ "statusSigner", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sigId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("firstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusSigner", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table VLegalSigner (sigId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,userId LONG,createdDate DATE null,modifiedDate DATE null,createdByUser LONG,modifiedByUser LONG,firstName VARCHAR(75) null,lastName VARCHAR(75) null,language VARCHAR(75) null,statusSigner BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table VLegalSigner";
	public static final String ORDER_BY_JPQL = " ORDER BY vLegalSigner.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VLegalSigner.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.VLegalSigner"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.VLegalSigner"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.VLegalSigner"),
			true);
	public static final long GROUPID_COLUMN_BITMASK = 1L;
	public static final long LANGUAGE_COLUMN_BITMASK = 2L;
	public static final long SIGID_COLUMN_BITMASK = 4L;
	public static final long STATUSSIGNER_COLUMN_BITMASK = 8L;
	public static final long CREATEDDATE_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.VLegalSigner"));

	public VLegalSignerModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _sigId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setSigId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sigId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VLegalSigner.class;
	}

	@Override
	public String getModelClassName() {
		return VLegalSigner.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("sigId", getSigId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createdByUser", getCreatedByUser());
		attributes.put("modifiedByUser", getModifiedByUser());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("language", getLanguage());
		attributes.put("statusSigner", getStatusSigner());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String sigId = (String)attributes.get("sigId");

		if (sigId != null) {
			setSigId(sigId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long createdByUser = (Long)attributes.get("createdByUser");

		if (createdByUser != null) {
			setCreatedByUser(createdByUser);
		}

		Long modifiedByUser = (Long)attributes.get("modifiedByUser");

		if (modifiedByUser != null) {
			setModifiedByUser(modifiedByUser);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String language = (String)attributes.get("language");

		if (language != null) {
			setLanguage(language);
		}

		Boolean statusSigner = (Boolean)attributes.get("statusSigner");

		if (statusSigner != null) {
			setStatusSigner(statusSigner);
		}
	}

	@Override
	public String getSigId() {
		if (_sigId == null) {
			return StringPool.BLANK;
		}
		else {
			return _sigId;
		}
	}

	@Override
	public void setSigId(String sigId) {
		_columnBitmask |= SIGID_COLUMN_BITMASK;

		if (_originalSigId == null) {
			_originalSigId = _sigId;
		}

		_sigId = sigId;
	}

	public String getOriginalSigId() {
		return GetterUtil.getString(_originalSigId);
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_columnBitmask = -1L;

		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCreatedByUser() {
		return _createdByUser;
	}

	@Override
	public void setCreatedByUser(long createdByUser) {
		_createdByUser = createdByUser;
	}

	@Override
	public long getModifiedByUser() {
		return _modifiedByUser;
	}

	@Override
	public void setModifiedByUser(long modifiedByUser) {
		_modifiedByUser = modifiedByUser;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		_columnBitmask |= LANGUAGE_COLUMN_BITMASK;

		if (_originalLanguage == null) {
			_originalLanguage = _language;
		}

		_language = language;
	}

	public String getOriginalLanguage() {
		return GetterUtil.getString(_originalLanguage);
	}

	@Override
	public boolean getStatusSigner() {
		return _statusSigner;
	}

	@Override
	public boolean isStatusSigner() {
		return _statusSigner;
	}

	@Override
	public void setStatusSigner(boolean statusSigner) {
		_columnBitmask |= STATUSSIGNER_COLUMN_BITMASK;

		if (!_setOriginalStatusSigner) {
			_setOriginalStatusSigner = true;

			_originalStatusSigner = _statusSigner;
		}

		_statusSigner = statusSigner;
	}

	public boolean getOriginalStatusSigner() {
		return _originalStatusSigner;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VLegalSigner toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VLegalSigner)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VLegalSignerImpl vLegalSignerImpl = new VLegalSignerImpl();

		vLegalSignerImpl.setSigId(getSigId());
		vLegalSignerImpl.setGroupId(getGroupId());
		vLegalSignerImpl.setCompanyId(getCompanyId());
		vLegalSignerImpl.setUserId(getUserId());
		vLegalSignerImpl.setCreatedDate(getCreatedDate());
		vLegalSignerImpl.setModifiedDate(getModifiedDate());
		vLegalSignerImpl.setCreatedByUser(getCreatedByUser());
		vLegalSignerImpl.setModifiedByUser(getModifiedByUser());
		vLegalSignerImpl.setFirstName(getFirstName());
		vLegalSignerImpl.setLastName(getLastName());
		vLegalSignerImpl.setLanguage(getLanguage());
		vLegalSignerImpl.setStatusSigner(getStatusSigner());

		vLegalSignerImpl.resetOriginalValues();

		return vLegalSignerImpl;
	}

	@Override
	public int compareTo(VLegalSigner vLegalSigner) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(),
				vLegalSigner.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VLegalSigner)) {
			return false;
		}

		VLegalSigner vLegalSigner = (VLegalSigner)obj;

		String primaryKey = vLegalSigner.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VLegalSignerModelImpl vLegalSignerModelImpl = this;

		vLegalSignerModelImpl._originalSigId = vLegalSignerModelImpl._sigId;

		vLegalSignerModelImpl._originalGroupId = vLegalSignerModelImpl._groupId;

		vLegalSignerModelImpl._setOriginalGroupId = false;

		vLegalSignerModelImpl._originalLanguage = vLegalSignerModelImpl._language;

		vLegalSignerModelImpl._originalStatusSigner = vLegalSignerModelImpl._statusSigner;

		vLegalSignerModelImpl._setOriginalStatusSigner = false;

		vLegalSignerModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VLegalSigner> toCacheModel() {
		VLegalSignerCacheModel vLegalSignerCacheModel = new VLegalSignerCacheModel();

		vLegalSignerCacheModel.sigId = getSigId();

		String sigId = vLegalSignerCacheModel.sigId;

		if ((sigId != null) && (sigId.length() == 0)) {
			vLegalSignerCacheModel.sigId = null;
		}

		vLegalSignerCacheModel.groupId = getGroupId();

		vLegalSignerCacheModel.companyId = getCompanyId();

		vLegalSignerCacheModel.userId = getUserId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			vLegalSignerCacheModel.createdDate = createdDate.getTime();
		}
		else {
			vLegalSignerCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vLegalSignerCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vLegalSignerCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vLegalSignerCacheModel.createdByUser = getCreatedByUser();

		vLegalSignerCacheModel.modifiedByUser = getModifiedByUser();

		vLegalSignerCacheModel.firstName = getFirstName();

		String firstName = vLegalSignerCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			vLegalSignerCacheModel.firstName = null;
		}

		vLegalSignerCacheModel.lastName = getLastName();

		String lastName = vLegalSignerCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			vLegalSignerCacheModel.lastName = null;
		}

		vLegalSignerCacheModel.language = getLanguage();

		String language = vLegalSignerCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			vLegalSignerCacheModel.language = null;
		}

		vLegalSignerCacheModel.statusSigner = getStatusSigner();

		return vLegalSignerCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{sigId=");
		sb.append(getSigId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createdByUser=");
		sb.append(getCreatedByUser());
		sb.append(", modifiedByUser=");
		sb.append(getModifiedByUser());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", statusSigner=");
		sb.append(getStatusSigner());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.VLegalSigner");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>sigId</column-name><column-value><![CDATA[");
		sb.append(getSigId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdByUser</column-name><column-value><![CDATA[");
		sb.append(getCreatedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedByUser</column-name><column-value><![CDATA[");
		sb.append(getModifiedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusSigner</column-name><column-value><![CDATA[");
		sb.append(getStatusSigner());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VLegalSigner.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VLegalSigner.class
		};
	private String _sigId;
	private String _originalSigId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _createdByUser;
	private long _modifiedByUser;
	private String _firstName;
	private String _lastName;
	private String _language;
	private String _originalLanguage;
	private boolean _statusSigner;
	private boolean _originalStatusSigner;
	private boolean _setOriginalStatusSigner;
	private long _columnBitmask;
	private VLegalSigner _escapedModel;
}