/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.VcmsLogger;
import vn.gov.hoabinh.model.VcmsLoggerModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VcmsLogger service. Represents a row in the &quot;VcmsLogger&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VcmsLoggerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VcmsLoggerImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VcmsLoggerImpl
 * @see VcmsLogger
 * @see VcmsLoggerModel
 * @generated
 */
@ProviderType
public class VcmsLoggerModelImpl extends BaseModelImpl<VcmsLogger>
	implements VcmsLoggerModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vcms logger model instance should use the {@link VcmsLogger} interface instead.
	 */
	public static final String TABLE_NAME = "VcmsLogger";
	public static final Object[][] TABLE_COLUMNS = {
			{ "loggerId", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "entryId", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP },
			{ "createdByUser", Types.VARCHAR },
			{ "classEntry", Types.VARCHAR },
			{ "content", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("loggerId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("entryId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdByUser", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("classEntry", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table VcmsLogger (loggerId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,entryId VARCHAR(75) null,createdDate DATE null,createdByUser VARCHAR(75) null,classEntry VARCHAR(75) null,content VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table VcmsLogger";
	public static final String ORDER_BY_JPQL = " ORDER BY vcmsLogger.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VcmsLogger.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.VcmsLogger"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.VcmsLogger"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.VcmsLogger"),
			true);
	public static final long CLASSENTRY_COLUMN_BITMASK = 1L;
	public static final long CREATEDBYUSER_COLUMN_BITMASK = 2L;
	public static final long CREATEDDATE_COLUMN_BITMASK = 4L;
	public static final long ENTRYID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.VcmsLogger"));

	public VcmsLoggerModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _loggerId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setLoggerId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _loggerId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VcmsLogger.class;
	}

	@Override
	public String getModelClassName() {
		return VcmsLogger.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("loggerId", getLoggerId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("entryId", getEntryId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdByUser", getCreatedByUser());
		attributes.put("classEntry", getClassEntry());
		attributes.put("content", getContent());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String loggerId = (String)attributes.get("loggerId");

		if (loggerId != null) {
			setLoggerId(loggerId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String entryId = (String)attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String createdByUser = (String)attributes.get("createdByUser");

		if (createdByUser != null) {
			setCreatedByUser(createdByUser);
		}

		String classEntry = (String)attributes.get("classEntry");

		if (classEntry != null) {
			setClassEntry(classEntry);
		}

		String content = (String)attributes.get("content");

		if (content != null) {
			setContent(content);
		}
	}

	@Override
	public String getLoggerId() {
		if (_loggerId == null) {
			return StringPool.BLANK;
		}
		else {
			return _loggerId;
		}
	}

	@Override
	public void setLoggerId(String loggerId) {
		_loggerId = loggerId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public String getEntryId() {
		if (_entryId == null) {
			return StringPool.BLANK;
		}
		else {
			return _entryId;
		}
	}

	@Override
	public void setEntryId(String entryId) {
		_columnBitmask |= ENTRYID_COLUMN_BITMASK;

		if (_originalEntryId == null) {
			_originalEntryId = _entryId;
		}

		_entryId = entryId;
	}

	public String getOriginalEntryId() {
		return GetterUtil.getString(_originalEntryId);
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_columnBitmask = -1L;

		if (_originalCreatedDate == null) {
			_originalCreatedDate = _createdDate;
		}

		_createdDate = createdDate;
	}

	public Date getOriginalCreatedDate() {
		return _originalCreatedDate;
	}

	@Override
	public String getCreatedByUser() {
		if (_createdByUser == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdByUser;
		}
	}

	@Override
	public void setCreatedByUser(String createdByUser) {
		_columnBitmask |= CREATEDBYUSER_COLUMN_BITMASK;

		if (_originalCreatedByUser == null) {
			_originalCreatedByUser = _createdByUser;
		}

		_createdByUser = createdByUser;
	}

	public String getOriginalCreatedByUser() {
		return GetterUtil.getString(_originalCreatedByUser);
	}

	@Override
	public String getClassEntry() {
		if (_classEntry == null) {
			return StringPool.BLANK;
		}
		else {
			return _classEntry;
		}
	}

	@Override
	public void setClassEntry(String classEntry) {
		_columnBitmask |= CLASSENTRY_COLUMN_BITMASK;

		if (_originalClassEntry == null) {
			_originalClassEntry = _classEntry;
		}

		_classEntry = classEntry;
	}

	public String getOriginalClassEntry() {
		return GetterUtil.getString(_originalClassEntry);
	}

	@Override
	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_content = content;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VcmsLogger toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VcmsLogger)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VcmsLoggerImpl vcmsLoggerImpl = new VcmsLoggerImpl();

		vcmsLoggerImpl.setLoggerId(getLoggerId());
		vcmsLoggerImpl.setGroupId(getGroupId());
		vcmsLoggerImpl.setCompanyId(getCompanyId());
		vcmsLoggerImpl.setEntryId(getEntryId());
		vcmsLoggerImpl.setCreatedDate(getCreatedDate());
		vcmsLoggerImpl.setCreatedByUser(getCreatedByUser());
		vcmsLoggerImpl.setClassEntry(getClassEntry());
		vcmsLoggerImpl.setContent(getContent());

		vcmsLoggerImpl.resetOriginalValues();

		return vcmsLoggerImpl;
	}

	@Override
	public int compareTo(VcmsLogger vcmsLogger) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(), vcmsLogger.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VcmsLogger)) {
			return false;
		}

		VcmsLogger vcmsLogger = (VcmsLogger)obj;

		String primaryKey = vcmsLogger.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VcmsLoggerModelImpl vcmsLoggerModelImpl = this;

		vcmsLoggerModelImpl._originalEntryId = vcmsLoggerModelImpl._entryId;

		vcmsLoggerModelImpl._originalCreatedDate = vcmsLoggerModelImpl._createdDate;

		vcmsLoggerModelImpl._originalCreatedByUser = vcmsLoggerModelImpl._createdByUser;

		vcmsLoggerModelImpl._originalClassEntry = vcmsLoggerModelImpl._classEntry;

		vcmsLoggerModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VcmsLogger> toCacheModel() {
		VcmsLoggerCacheModel vcmsLoggerCacheModel = new VcmsLoggerCacheModel();

		vcmsLoggerCacheModel.loggerId = getLoggerId();

		String loggerId = vcmsLoggerCacheModel.loggerId;

		if ((loggerId != null) && (loggerId.length() == 0)) {
			vcmsLoggerCacheModel.loggerId = null;
		}

		vcmsLoggerCacheModel.groupId = getGroupId();

		vcmsLoggerCacheModel.companyId = getCompanyId();

		vcmsLoggerCacheModel.entryId = getEntryId();

		String entryId = vcmsLoggerCacheModel.entryId;

		if ((entryId != null) && (entryId.length() == 0)) {
			vcmsLoggerCacheModel.entryId = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			vcmsLoggerCacheModel.createdDate = createdDate.getTime();
		}
		else {
			vcmsLoggerCacheModel.createdDate = Long.MIN_VALUE;
		}

		vcmsLoggerCacheModel.createdByUser = getCreatedByUser();

		String createdByUser = vcmsLoggerCacheModel.createdByUser;

		if ((createdByUser != null) && (createdByUser.length() == 0)) {
			vcmsLoggerCacheModel.createdByUser = null;
		}

		vcmsLoggerCacheModel.classEntry = getClassEntry();

		String classEntry = vcmsLoggerCacheModel.classEntry;

		if ((classEntry != null) && (classEntry.length() == 0)) {
			vcmsLoggerCacheModel.classEntry = null;
		}

		vcmsLoggerCacheModel.content = getContent();

		String content = vcmsLoggerCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			vcmsLoggerCacheModel.content = null;
		}

		return vcmsLoggerCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{loggerId=");
		sb.append(getLoggerId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", entryId=");
		sb.append(getEntryId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdByUser=");
		sb.append(getCreatedByUser());
		sb.append(", classEntry=");
		sb.append(getClassEntry());
		sb.append(", content=");
		sb.append(getContent());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.VcmsLogger");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>loggerId</column-name><column-value><![CDATA[");
		sb.append(getLoggerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdByUser</column-name><column-value><![CDATA[");
		sb.append(getCreatedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classEntry</column-name><column-value><![CDATA[");
		sb.append(getClassEntry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VcmsLogger.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VcmsLogger.class
		};
	private String _loggerId;
	private long _groupId;
	private long _companyId;
	private String _entryId;
	private String _originalEntryId;
	private Date _createdDate;
	private Date _originalCreatedDate;
	private String _createdByUser;
	private String _originalCreatedByUser;
	private String _classEntry;
	private String _originalClassEntry;
	private String _content;
	private long _columnBitmask;
	private VcmsLogger _escapedModel;
}