/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.VLegalSuggestDocument;
import vn.gov.hoabinh.model.VLegalSuggestDocumentModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VLegalSuggestDocument service. Represents a row in the &quot;VLegalSuggestDocument&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VLegalSuggestDocumentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLegalSuggestDocumentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VLegalSuggestDocumentImpl
 * @see VLegalSuggestDocument
 * @see VLegalSuggestDocumentModel
 * @generated
 */
@ProviderType
public class VLegalSuggestDocumentModelImpl extends BaseModelImpl<VLegalSuggestDocument>
	implements VLegalSuggestDocumentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v legal suggest document model instance should use the {@link VLegalSuggestDocument} interface instead.
	 */
	public static final String TABLE_NAME = "VLegalSuggestDocument";
	public static final Object[][] TABLE_COLUMNS = {
			{ "sugId", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "modifiedByUser", Types.BIGINT },
			{ "approved", Types.BOOLEAN },
			{ "approvedByUser", Types.BIGINT },
			{ "approvedDate", Types.TIMESTAMP },
			{ "title", Types.VARCHAR },
			{ "content", Types.VARCHAR },
			{ "language", Types.VARCHAR },
			{ "visitorName", Types.VARCHAR },
			{ "visitorEmail", Types.VARCHAR },
			{ "visitorTel", Types.VARCHAR },
			{ "visitorAddress", Types.VARCHAR },
			{ "draftId", Types.VARCHAR },
			{ "hasAttachment", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sugId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("approved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("approvedByUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("approvedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("visitorName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("visitorEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("visitorTel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("visitorAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("draftId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hasAttachment", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table VLegalSuggestDocument (sugId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,userId LONG,createdDate DATE null,modifiedDate DATE null,modifiedByUser LONG,approved BOOLEAN,approvedByUser LONG,approvedDate DATE null,title VARCHAR(75) null,content VARCHAR(75) null,language VARCHAR(75) null,visitorName VARCHAR(75) null,visitorEmail VARCHAR(75) null,visitorTel VARCHAR(75) null,visitorAddress VARCHAR(75) null,draftId VARCHAR(75) null,hasAttachment BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table VLegalSuggestDocument";
	public static final String ORDER_BY_JPQL = " ORDER BY vLegalSuggestDocument.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VLegalSuggestDocument.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.VLegalSuggestDocument"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.VLegalSuggestDocument"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.VLegalSuggestDocument"),
			true);
	public static final long APPROVED_COLUMN_BITMASK = 1L;
	public static final long DRAFTID_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long LANGUAGE_COLUMN_BITMASK = 8L;
	public static final long SUGID_COLUMN_BITMASK = 16L;
	public static final long CREATEDDATE_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.VLegalSuggestDocument"));

	public VLegalSuggestDocumentModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _sugId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setSugId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sugId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VLegalSuggestDocument.class;
	}

	@Override
	public String getModelClassName() {
		return VLegalSuggestDocument.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("sugId", getSugId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("modifiedByUser", getModifiedByUser());
		attributes.put("approved", getApproved());
		attributes.put("approvedByUser", getApprovedByUser());
		attributes.put("approvedDate", getApprovedDate());
		attributes.put("title", getTitle());
		attributes.put("content", getContent());
		attributes.put("language", getLanguage());
		attributes.put("visitorName", getVisitorName());
		attributes.put("visitorEmail", getVisitorEmail());
		attributes.put("visitorTel", getVisitorTel());
		attributes.put("visitorAddress", getVisitorAddress());
		attributes.put("draftId", getDraftId());
		attributes.put("hasAttachment", getHasAttachment());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String sugId = (String)attributes.get("sugId");

		if (sugId != null) {
			setSugId(sugId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long modifiedByUser = (Long)attributes.get("modifiedByUser");

		if (modifiedByUser != null) {
			setModifiedByUser(modifiedByUser);
		}

		Boolean approved = (Boolean)attributes.get("approved");

		if (approved != null) {
			setApproved(approved);
		}

		Long approvedByUser = (Long)attributes.get("approvedByUser");

		if (approvedByUser != null) {
			setApprovedByUser(approvedByUser);
		}

		Date approvedDate = (Date)attributes.get("approvedDate");

		if (approvedDate != null) {
			setApprovedDate(approvedDate);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String content = (String)attributes.get("content");

		if (content != null) {
			setContent(content);
		}

		String language = (String)attributes.get("language");

		if (language != null) {
			setLanguage(language);
		}

		String visitorName = (String)attributes.get("visitorName");

		if (visitorName != null) {
			setVisitorName(visitorName);
		}

		String visitorEmail = (String)attributes.get("visitorEmail");

		if (visitorEmail != null) {
			setVisitorEmail(visitorEmail);
		}

		String visitorTel = (String)attributes.get("visitorTel");

		if (visitorTel != null) {
			setVisitorTel(visitorTel);
		}

		String visitorAddress = (String)attributes.get("visitorAddress");

		if (visitorAddress != null) {
			setVisitorAddress(visitorAddress);
		}

		String draftId = (String)attributes.get("draftId");

		if (draftId != null) {
			setDraftId(draftId);
		}

		Boolean hasAttachment = (Boolean)attributes.get("hasAttachment");

		if (hasAttachment != null) {
			setHasAttachment(hasAttachment);
		}
	}

	@Override
	public String getSugId() {
		if (_sugId == null) {
			return StringPool.BLANK;
		}
		else {
			return _sugId;
		}
	}

	@Override
	public void setSugId(String sugId) {
		_columnBitmask |= SUGID_COLUMN_BITMASK;

		if (_originalSugId == null) {
			_originalSugId = _sugId;
		}

		_sugId = sugId;
	}

	public String getOriginalSugId() {
		return GetterUtil.getString(_originalSugId);
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_columnBitmask = -1L;

		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getModifiedByUser() {
		return _modifiedByUser;
	}

	@Override
	public void setModifiedByUser(long modifiedByUser) {
		_modifiedByUser = modifiedByUser;
	}

	@Override
	public boolean getApproved() {
		return _approved;
	}

	@Override
	public boolean isApproved() {
		return _approved;
	}

	@Override
	public void setApproved(boolean approved) {
		_columnBitmask |= APPROVED_COLUMN_BITMASK;

		if (!_setOriginalApproved) {
			_setOriginalApproved = true;

			_originalApproved = _approved;
		}

		_approved = approved;
	}

	public boolean getOriginalApproved() {
		return _originalApproved;
	}

	@Override
	public long getApprovedByUser() {
		return _approvedByUser;
	}

	@Override
	public void setApprovedByUser(long approvedByUser) {
		_approvedByUser = approvedByUser;
	}

	@Override
	public Date getApprovedDate() {
		return _approvedDate;
	}

	@Override
	public void setApprovedDate(Date approvedDate) {
		_approvedDate = approvedDate;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_content = content;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		_columnBitmask |= LANGUAGE_COLUMN_BITMASK;

		if (_originalLanguage == null) {
			_originalLanguage = _language;
		}

		_language = language;
	}

	public String getOriginalLanguage() {
		return GetterUtil.getString(_originalLanguage);
	}

	@Override
	public String getVisitorName() {
		if (_visitorName == null) {
			return StringPool.BLANK;
		}
		else {
			return _visitorName;
		}
	}

	@Override
	public void setVisitorName(String visitorName) {
		_visitorName = visitorName;
	}

	@Override
	public String getVisitorEmail() {
		if (_visitorEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _visitorEmail;
		}
	}

	@Override
	public void setVisitorEmail(String visitorEmail) {
		_visitorEmail = visitorEmail;
	}

	@Override
	public String getVisitorTel() {
		if (_visitorTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _visitorTel;
		}
	}

	@Override
	public void setVisitorTel(String visitorTel) {
		_visitorTel = visitorTel;
	}

	@Override
	public String getVisitorAddress() {
		if (_visitorAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _visitorAddress;
		}
	}

	@Override
	public void setVisitorAddress(String visitorAddress) {
		_visitorAddress = visitorAddress;
	}

	@Override
	public String getDraftId() {
		if (_draftId == null) {
			return StringPool.BLANK;
		}
		else {
			return _draftId;
		}
	}

	@Override
	public void setDraftId(String draftId) {
		_columnBitmask |= DRAFTID_COLUMN_BITMASK;

		if (_originalDraftId == null) {
			_originalDraftId = _draftId;
		}

		_draftId = draftId;
	}

	public String getOriginalDraftId() {
		return GetterUtil.getString(_originalDraftId);
	}

	@Override
	public boolean getHasAttachment() {
		return _hasAttachment;
	}

	@Override
	public boolean isHasAttachment() {
		return _hasAttachment;
	}

	@Override
	public void setHasAttachment(boolean hasAttachment) {
		_hasAttachment = hasAttachment;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VLegalSuggestDocument toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VLegalSuggestDocument)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VLegalSuggestDocumentImpl vLegalSuggestDocumentImpl = new VLegalSuggestDocumentImpl();

		vLegalSuggestDocumentImpl.setSugId(getSugId());
		vLegalSuggestDocumentImpl.setGroupId(getGroupId());
		vLegalSuggestDocumentImpl.setCompanyId(getCompanyId());
		vLegalSuggestDocumentImpl.setUserId(getUserId());
		vLegalSuggestDocumentImpl.setCreatedDate(getCreatedDate());
		vLegalSuggestDocumentImpl.setModifiedDate(getModifiedDate());
		vLegalSuggestDocumentImpl.setModifiedByUser(getModifiedByUser());
		vLegalSuggestDocumentImpl.setApproved(getApproved());
		vLegalSuggestDocumentImpl.setApprovedByUser(getApprovedByUser());
		vLegalSuggestDocumentImpl.setApprovedDate(getApprovedDate());
		vLegalSuggestDocumentImpl.setTitle(getTitle());
		vLegalSuggestDocumentImpl.setContent(getContent());
		vLegalSuggestDocumentImpl.setLanguage(getLanguage());
		vLegalSuggestDocumentImpl.setVisitorName(getVisitorName());
		vLegalSuggestDocumentImpl.setVisitorEmail(getVisitorEmail());
		vLegalSuggestDocumentImpl.setVisitorTel(getVisitorTel());
		vLegalSuggestDocumentImpl.setVisitorAddress(getVisitorAddress());
		vLegalSuggestDocumentImpl.setDraftId(getDraftId());
		vLegalSuggestDocumentImpl.setHasAttachment(getHasAttachment());

		vLegalSuggestDocumentImpl.resetOriginalValues();

		return vLegalSuggestDocumentImpl;
	}

	@Override
	public int compareTo(VLegalSuggestDocument vLegalSuggestDocument) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(),
				vLegalSuggestDocument.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VLegalSuggestDocument)) {
			return false;
		}

		VLegalSuggestDocument vLegalSuggestDocument = (VLegalSuggestDocument)obj;

		String primaryKey = vLegalSuggestDocument.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VLegalSuggestDocumentModelImpl vLegalSuggestDocumentModelImpl = this;

		vLegalSuggestDocumentModelImpl._originalSugId = vLegalSuggestDocumentModelImpl._sugId;

		vLegalSuggestDocumentModelImpl._originalGroupId = vLegalSuggestDocumentModelImpl._groupId;

		vLegalSuggestDocumentModelImpl._setOriginalGroupId = false;

		vLegalSuggestDocumentModelImpl._originalApproved = vLegalSuggestDocumentModelImpl._approved;

		vLegalSuggestDocumentModelImpl._setOriginalApproved = false;

		vLegalSuggestDocumentModelImpl._originalLanguage = vLegalSuggestDocumentModelImpl._language;

		vLegalSuggestDocumentModelImpl._originalDraftId = vLegalSuggestDocumentModelImpl._draftId;

		vLegalSuggestDocumentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VLegalSuggestDocument> toCacheModel() {
		VLegalSuggestDocumentCacheModel vLegalSuggestDocumentCacheModel = new VLegalSuggestDocumentCacheModel();

		vLegalSuggestDocumentCacheModel.sugId = getSugId();

		String sugId = vLegalSuggestDocumentCacheModel.sugId;

		if ((sugId != null) && (sugId.length() == 0)) {
			vLegalSuggestDocumentCacheModel.sugId = null;
		}

		vLegalSuggestDocumentCacheModel.groupId = getGroupId();

		vLegalSuggestDocumentCacheModel.companyId = getCompanyId();

		vLegalSuggestDocumentCacheModel.userId = getUserId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			vLegalSuggestDocumentCacheModel.createdDate = createdDate.getTime();
		}
		else {
			vLegalSuggestDocumentCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vLegalSuggestDocumentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vLegalSuggestDocumentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vLegalSuggestDocumentCacheModel.modifiedByUser = getModifiedByUser();

		vLegalSuggestDocumentCacheModel.approved = getApproved();

		vLegalSuggestDocumentCacheModel.approvedByUser = getApprovedByUser();

		Date approvedDate = getApprovedDate();

		if (approvedDate != null) {
			vLegalSuggestDocumentCacheModel.approvedDate = approvedDate.getTime();
		}
		else {
			vLegalSuggestDocumentCacheModel.approvedDate = Long.MIN_VALUE;
		}

		vLegalSuggestDocumentCacheModel.title = getTitle();

		String title = vLegalSuggestDocumentCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			vLegalSuggestDocumentCacheModel.title = null;
		}

		vLegalSuggestDocumentCacheModel.content = getContent();

		String content = vLegalSuggestDocumentCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			vLegalSuggestDocumentCacheModel.content = null;
		}

		vLegalSuggestDocumentCacheModel.language = getLanguage();

		String language = vLegalSuggestDocumentCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			vLegalSuggestDocumentCacheModel.language = null;
		}

		vLegalSuggestDocumentCacheModel.visitorName = getVisitorName();

		String visitorName = vLegalSuggestDocumentCacheModel.visitorName;

		if ((visitorName != null) && (visitorName.length() == 0)) {
			vLegalSuggestDocumentCacheModel.visitorName = null;
		}

		vLegalSuggestDocumentCacheModel.visitorEmail = getVisitorEmail();

		String visitorEmail = vLegalSuggestDocumentCacheModel.visitorEmail;

		if ((visitorEmail != null) && (visitorEmail.length() == 0)) {
			vLegalSuggestDocumentCacheModel.visitorEmail = null;
		}

		vLegalSuggestDocumentCacheModel.visitorTel = getVisitorTel();

		String visitorTel = vLegalSuggestDocumentCacheModel.visitorTel;

		if ((visitorTel != null) && (visitorTel.length() == 0)) {
			vLegalSuggestDocumentCacheModel.visitorTel = null;
		}

		vLegalSuggestDocumentCacheModel.visitorAddress = getVisitorAddress();

		String visitorAddress = vLegalSuggestDocumentCacheModel.visitorAddress;

		if ((visitorAddress != null) && (visitorAddress.length() == 0)) {
			vLegalSuggestDocumentCacheModel.visitorAddress = null;
		}

		vLegalSuggestDocumentCacheModel.draftId = getDraftId();

		String draftId = vLegalSuggestDocumentCacheModel.draftId;

		if ((draftId != null) && (draftId.length() == 0)) {
			vLegalSuggestDocumentCacheModel.draftId = null;
		}

		vLegalSuggestDocumentCacheModel.hasAttachment = getHasAttachment();

		return vLegalSuggestDocumentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{sugId=");
		sb.append(getSugId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", modifiedByUser=");
		sb.append(getModifiedByUser());
		sb.append(", approved=");
		sb.append(getApproved());
		sb.append(", approvedByUser=");
		sb.append(getApprovedByUser());
		sb.append(", approvedDate=");
		sb.append(getApprovedDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", visitorName=");
		sb.append(getVisitorName());
		sb.append(", visitorEmail=");
		sb.append(getVisitorEmail());
		sb.append(", visitorTel=");
		sb.append(getVisitorTel());
		sb.append(", visitorAddress=");
		sb.append(getVisitorAddress());
		sb.append(", draftId=");
		sb.append(getDraftId());
		sb.append(", hasAttachment=");
		sb.append(getHasAttachment());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.VLegalSuggestDocument");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>sugId</column-name><column-value><![CDATA[");
		sb.append(getSugId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedByUser</column-name><column-value><![CDATA[");
		sb.append(getModifiedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approved</column-name><column-value><![CDATA[");
		sb.append(getApproved());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedByUser</column-name><column-value><![CDATA[");
		sb.append(getApprovedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedDate</column-name><column-value><![CDATA[");
		sb.append(getApprovedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visitorName</column-name><column-value><![CDATA[");
		sb.append(getVisitorName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visitorEmail</column-name><column-value><![CDATA[");
		sb.append(getVisitorEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visitorTel</column-name><column-value><![CDATA[");
		sb.append(getVisitorTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visitorAddress</column-name><column-value><![CDATA[");
		sb.append(getVisitorAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>draftId</column-name><column-value><![CDATA[");
		sb.append(getDraftId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hasAttachment</column-name><column-value><![CDATA[");
		sb.append(getHasAttachment());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VLegalSuggestDocument.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VLegalSuggestDocument.class
		};
	private String _sugId;
	private String _originalSugId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _modifiedByUser;
	private boolean _approved;
	private boolean _originalApproved;
	private boolean _setOriginalApproved;
	private long _approvedByUser;
	private Date _approvedDate;
	private String _title;
	private String _content;
	private String _language;
	private String _originalLanguage;
	private String _visitorName;
	private String _visitorEmail;
	private String _visitorTel;
	private String _visitorAddress;
	private String _draftId;
	private String _originalDraftId;
	private boolean _hasAttachment;
	private long _columnBitmask;
	private VLegalSuggestDocument _escapedModel;
}