/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.AdvItem;
import vn.gov.hoabinh.model.AdvItemModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AdvItem service. Represents a row in the &quot;AdvItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AdvItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AdvItemImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AdvItemImpl
 * @see AdvItem
 * @see AdvItemModel
 * @generated
 */
@ProviderType
public class AdvItemModelImpl extends BaseModelImpl<AdvItem>
	implements AdvItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a adv item model instance should use the {@link AdvItem} interface instead.
	 */
	public static final String TABLE_NAME = "AdvItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "itemId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "expriedDate", Types.TIMESTAMP },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "url", Types.VARCHAR },
			{ "isTargetBlank", Types.BOOLEAN },
			{ "txtMouseOver", Types.VARCHAR },
			{ "folderId", Types.BIGINT },
			{ "status", Types.BOOLEAN },
			{ "typeId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("itemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expriedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("url", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isTargetBlank", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("txtMouseOver", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("folderId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("typeId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table AdvItem (itemId LONG not null primary key,createDate DATE null,modifiedDate DATE null,expriedDate DATE null,groupId LONG,companyId LONG,name VARCHAR(75) null,description VARCHAR(75) null,url VARCHAR(75) null,isTargetBlank BOOLEAN,txtMouseOver VARCHAR(75) null,folderId LONG,status BOOLEAN,typeId LONG)";
	public static final String TABLE_SQL_DROP = "drop table AdvItem";
	public static final String ORDER_BY_JPQL = " ORDER BY advItem.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY AdvItem.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.AdvItem"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.AdvItem"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.AdvItem"),
			true);
	public static final long GROUPID_COLUMN_BITMASK = 1L;
	public static final long STATUS_COLUMN_BITMASK = 2L;
	public static final long TYPEID_COLUMN_BITMASK = 4L;
	public static final long CREATEDATE_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.AdvItem"));

	public AdvItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _itemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _itemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AdvItem.class;
	}

	@Override
	public String getModelClassName() {
		return AdvItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("itemId", getItemId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("expriedDate", getExpriedDate());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("url", getUrl());
		attributes.put("isTargetBlank", getIsTargetBlank());
		attributes.put("txtMouseOver", getTxtMouseOver());
		attributes.put("folderId", getFolderId());
		attributes.put("status", getStatus());
		attributes.put("typeId", getTypeId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long itemId = (Long)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date expriedDate = (Date)attributes.get("expriedDate");

		if (expriedDate != null) {
			setExpriedDate(expriedDate);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String url = (String)attributes.get("url");

		if (url != null) {
			setUrl(url);
		}

		Boolean isTargetBlank = (Boolean)attributes.get("isTargetBlank");

		if (isTargetBlank != null) {
			setIsTargetBlank(isTargetBlank);
		}

		String txtMouseOver = (String)attributes.get("txtMouseOver");

		if (txtMouseOver != null) {
			setTxtMouseOver(txtMouseOver);
		}

		Long folderId = (Long)attributes.get("folderId");

		if (folderId != null) {
			setFolderId(folderId);
		}

		Boolean status = (Boolean)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long typeId = (Long)attributes.get("typeId");

		if (typeId != null) {
			setTypeId(typeId);
		}
	}

	@Override
	public long getItemId() {
		return _itemId;
	}

	@Override
	public void setItemId(long itemId) {
		_itemId = itemId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public Date getExpriedDate() {
		return _expriedDate;
	}

	@Override
	public void setExpriedDate(Date expriedDate) {
		_expriedDate = expriedDate;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getUrl() {
		if (_url == null) {
			return StringPool.BLANK;
		}
		else {
			return _url;
		}
	}

	@Override
	public void setUrl(String url) {
		_url = url;
	}

	@Override
	public boolean getIsTargetBlank() {
		return _isTargetBlank;
	}

	@Override
	public boolean isIsTargetBlank() {
		return _isTargetBlank;
	}

	@Override
	public void setIsTargetBlank(boolean isTargetBlank) {
		_isTargetBlank = isTargetBlank;
	}

	@Override
	public String getTxtMouseOver() {
		if (_txtMouseOver == null) {
			return StringPool.BLANK;
		}
		else {
			return _txtMouseOver;
		}
	}

	@Override
	public void setTxtMouseOver(String txtMouseOver) {
		_txtMouseOver = txtMouseOver;
	}

	@Override
	public long getFolderId() {
		return _folderId;
	}

	@Override
	public void setFolderId(long folderId) {
		_folderId = folderId;
	}

	@Override
	public boolean getStatus() {
		return _status;
	}

	@Override
	public boolean isStatus() {
		return _status;
	}

	@Override
	public void setStatus(boolean status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public boolean getOriginalStatus() {
		return _originalStatus;
	}

	@Override
	public long getTypeId() {
		return _typeId;
	}

	@Override
	public void setTypeId(long typeId) {
		_columnBitmask |= TYPEID_COLUMN_BITMASK;

		if (!_setOriginalTypeId) {
			_setOriginalTypeId = true;

			_originalTypeId = _typeId;
		}

		_typeId = typeId;
	}

	public long getOriginalTypeId() {
		return _originalTypeId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AdvItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AdvItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AdvItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AdvItemImpl advItemImpl = new AdvItemImpl();

		advItemImpl.setItemId(getItemId());
		advItemImpl.setCreateDate(getCreateDate());
		advItemImpl.setModifiedDate(getModifiedDate());
		advItemImpl.setExpriedDate(getExpriedDate());
		advItemImpl.setGroupId(getGroupId());
		advItemImpl.setCompanyId(getCompanyId());
		advItemImpl.setName(getName());
		advItemImpl.setDescription(getDescription());
		advItemImpl.setUrl(getUrl());
		advItemImpl.setIsTargetBlank(getIsTargetBlank());
		advItemImpl.setTxtMouseOver(getTxtMouseOver());
		advItemImpl.setFolderId(getFolderId());
		advItemImpl.setStatus(getStatus());
		advItemImpl.setTypeId(getTypeId());

		advItemImpl.resetOriginalValues();

		return advItemImpl;
	}

	@Override
	public int compareTo(AdvItem advItem) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), advItem.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AdvItem)) {
			return false;
		}

		AdvItem advItem = (AdvItem)obj;

		long primaryKey = advItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AdvItemModelImpl advItemModelImpl = this;

		advItemModelImpl._setModifiedDate = false;

		advItemModelImpl._originalGroupId = advItemModelImpl._groupId;

		advItemModelImpl._setOriginalGroupId = false;

		advItemModelImpl._originalStatus = advItemModelImpl._status;

		advItemModelImpl._setOriginalStatus = false;

		advItemModelImpl._originalTypeId = advItemModelImpl._typeId;

		advItemModelImpl._setOriginalTypeId = false;

		advItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AdvItem> toCacheModel() {
		AdvItemCacheModel advItemCacheModel = new AdvItemCacheModel();

		advItemCacheModel.itemId = getItemId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			advItemCacheModel.createDate = createDate.getTime();
		}
		else {
			advItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			advItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			advItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date expriedDate = getExpriedDate();

		if (expriedDate != null) {
			advItemCacheModel.expriedDate = expriedDate.getTime();
		}
		else {
			advItemCacheModel.expriedDate = Long.MIN_VALUE;
		}

		advItemCacheModel.groupId = getGroupId();

		advItemCacheModel.companyId = getCompanyId();

		advItemCacheModel.name = getName();

		String name = advItemCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			advItemCacheModel.name = null;
		}

		advItemCacheModel.description = getDescription();

		String description = advItemCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			advItemCacheModel.description = null;
		}

		advItemCacheModel.url = getUrl();

		String url = advItemCacheModel.url;

		if ((url != null) && (url.length() == 0)) {
			advItemCacheModel.url = null;
		}

		advItemCacheModel.isTargetBlank = getIsTargetBlank();

		advItemCacheModel.txtMouseOver = getTxtMouseOver();

		String txtMouseOver = advItemCacheModel.txtMouseOver;

		if ((txtMouseOver != null) && (txtMouseOver.length() == 0)) {
			advItemCacheModel.txtMouseOver = null;
		}

		advItemCacheModel.folderId = getFolderId();

		advItemCacheModel.status = getStatus();

		advItemCacheModel.typeId = getTypeId();

		return advItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{itemId=");
		sb.append(getItemId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", expriedDate=");
		sb.append(getExpriedDate());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", url=");
		sb.append(getUrl());
		sb.append(", isTargetBlank=");
		sb.append(getIsTargetBlank());
		sb.append(", txtMouseOver=");
		sb.append(getTxtMouseOver());
		sb.append(", folderId=");
		sb.append(getFolderId());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", typeId=");
		sb.append(getTypeId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.AdvItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expriedDate</column-name><column-value><![CDATA[");
		sb.append(getExpriedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>url</column-name><column-value><![CDATA[");
		sb.append(getUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isTargetBlank</column-name><column-value><![CDATA[");
		sb.append(getIsTargetBlank());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>txtMouseOver</column-name><column-value><![CDATA[");
		sb.append(getTxtMouseOver());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>folderId</column-name><column-value><![CDATA[");
		sb.append(getFolderId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeId</column-name><column-value><![CDATA[");
		sb.append(getTypeId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AdvItem.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AdvItem.class
		};
	private long _itemId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _expriedDate;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private String _name;
	private String _description;
	private String _url;
	private boolean _isTargetBlank;
	private String _txtMouseOver;
	private long _folderId;
	private boolean _status;
	private boolean _originalStatus;
	private boolean _setOriginalStatus;
	private long _typeId;
	private long _originalTypeId;
	private boolean _setOriginalTypeId;
	private long _columnBitmask;
	private AdvItem _escapedModel;
}