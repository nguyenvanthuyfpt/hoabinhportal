/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gov.hoabinh.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import vn.gov.hoabinh.model.VLegalDSRel;
import vn.gov.hoabinh.model.VLegalDSRelModel;
import vn.gov.hoabinh.service.persistence.VLegalDSRelPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VLegalDSRel service. Represents a row in the &quot;VLegalDSRel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VLegalDSRelModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLegalDSRelImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VLegalDSRelImpl
 * @see VLegalDSRel
 * @see VLegalDSRelModel
 * @generated
 */
@ProviderType
public class VLegalDSRelModelImpl extends BaseModelImpl<VLegalDSRel>
	implements VLegalDSRelModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v legal d s rel model instance should use the {@link VLegalDSRel} interface instead.
	 */
	public static final String TABLE_NAME = "VLegalDSRel";
	public static final Object[][] TABLE_COLUMNS = {
			{ "sigId", Types.VARCHAR },
			{ "docId", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sigId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("docId", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table VLegalDSRel (sigId VARCHAR(75) not null,docId VARCHAR(75) not null,primary key (sigId, docId))";
	public static final String TABLE_SQL_DROP = "drop table VLegalDSRel";
	public static final String ORDER_BY_JPQL = " ORDER BY vLegalDSRel.id.sigId DESC, vLegalDSRel.id.docId DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VLegalDSRel.sigId DESC, VLegalDSRel.docId DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gov.hoabinh.model.VLegalDSRel"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gov.hoabinh.model.VLegalDSRel"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(vn.gov.hoabinh.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gov.hoabinh.model.VLegalDSRel"),
			true);
	public static final long DOCID_COLUMN_BITMASK = 1L;
	public static final long SIGID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(vn.gov.hoabinh.service.util.ServiceProps.get(
				"lock.expiration.time.vn.gov.hoabinh.model.VLegalDSRel"));

	public VLegalDSRelModelImpl() {
	}

	@Override
	public VLegalDSRelPK getPrimaryKey() {
		return new VLegalDSRelPK(_sigId, _docId);
	}

	@Override
	public void setPrimaryKey(VLegalDSRelPK primaryKey) {
		setSigId(primaryKey.sigId);
		setDocId(primaryKey.docId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new VLegalDSRelPK(_sigId, _docId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((VLegalDSRelPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VLegalDSRel.class;
	}

	@Override
	public String getModelClassName() {
		return VLegalDSRel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("sigId", getSigId());
		attributes.put("docId", getDocId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String sigId = (String)attributes.get("sigId");

		if (sigId != null) {
			setSigId(sigId);
		}

		String docId = (String)attributes.get("docId");

		if (docId != null) {
			setDocId(docId);
		}
	}

	@Override
	public String getSigId() {
		if (_sigId == null) {
			return StringPool.BLANK;
		}
		else {
			return _sigId;
		}
	}

	@Override
	public void setSigId(String sigId) {
		_columnBitmask = -1L;

		if (_originalSigId == null) {
			_originalSigId = _sigId;
		}

		_sigId = sigId;
	}

	public String getOriginalSigId() {
		return GetterUtil.getString(_originalSigId);
	}

	@Override
	public String getDocId() {
		if (_docId == null) {
			return StringPool.BLANK;
		}
		else {
			return _docId;
		}
	}

	@Override
	public void setDocId(String docId) {
		_columnBitmask = -1L;

		if (_originalDocId == null) {
			_originalDocId = _docId;
		}

		_docId = docId;
	}

	public String getOriginalDocId() {
		return GetterUtil.getString(_originalDocId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VLegalDSRel toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VLegalDSRel)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VLegalDSRelImpl vLegalDSRelImpl = new VLegalDSRelImpl();

		vLegalDSRelImpl.setSigId(getSigId());
		vLegalDSRelImpl.setDocId(getDocId());

		vLegalDSRelImpl.resetOriginalValues();

		return vLegalDSRelImpl;
	}

	@Override
	public int compareTo(VLegalDSRel vLegalDSRel) {
		int value = 0;

		value = getSigId().compareTo(vLegalDSRel.getSigId());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		value = getDocId().compareTo(vLegalDSRel.getDocId());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VLegalDSRel)) {
			return false;
		}

		VLegalDSRel vLegalDSRel = (VLegalDSRel)obj;

		VLegalDSRelPK primaryKey = vLegalDSRel.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VLegalDSRelModelImpl vLegalDSRelModelImpl = this;

		vLegalDSRelModelImpl._originalSigId = vLegalDSRelModelImpl._sigId;

		vLegalDSRelModelImpl._originalDocId = vLegalDSRelModelImpl._docId;

		vLegalDSRelModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VLegalDSRel> toCacheModel() {
		VLegalDSRelCacheModel vLegalDSRelCacheModel = new VLegalDSRelCacheModel();

		vLegalDSRelCacheModel.vLegalDSRelPK = getPrimaryKey();

		vLegalDSRelCacheModel.sigId = getSigId();

		String sigId = vLegalDSRelCacheModel.sigId;

		if ((sigId != null) && (sigId.length() == 0)) {
			vLegalDSRelCacheModel.sigId = null;
		}

		vLegalDSRelCacheModel.docId = getDocId();

		String docId = vLegalDSRelCacheModel.docId;

		if ((docId != null) && (docId.length() == 0)) {
			vLegalDSRelCacheModel.docId = null;
		}

		return vLegalDSRelCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{sigId=");
		sb.append(getSigId());
		sb.append(", docId=");
		sb.append(getDocId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("vn.gov.hoabinh.model.VLegalDSRel");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>sigId</column-name><column-value><![CDATA[");
		sb.append(getSigId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docId</column-name><column-value><![CDATA[");
		sb.append(getDocId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VLegalDSRel.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VLegalDSRel.class
		};
	private String _sigId;
	private String _originalSigId;
	private String _docId;
	private String _originalDocId;
	private long _columnBitmask;
	private VLegalDSRel _escapedModel;
}